{
  "hash": "b4e947a9a2186a0c6fb93435f386d0e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity10\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - fpp3\n    - patchwork\n    - tsibbledata\n    - urca\n    - astsa\nwarning: false\nmessage: false\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n# Multiple Regression & Collinearity\n\nMultiple regression models the relationship between a dependent variable and multiple independent variables. In many real‐world scenarios, predictors can be correlated—this is known as **multicollinearity**. High multicollinearity inflates the variance of the coefficient estimates, making them unstable and difficult to interpret. A common diagnostic measure is the **Variance Inflation Factor (VIF)**. For a regression model:\n\n$$\n\\begin{align}\nY_t &= \\beta_0 + \\beta_1 X_{1,t} + \\beta_2 X_{2,t} + \\varepsilon_t,\n\\end{align}\n$$\n\nthe VIF for predictor $\\\\(X_i\\\\)$ is computed as:\n\n$$\n\\text{VIF}(X_i) = \\frac{1}{1 - R_i^2},\n$$\n\nwhere $\\\\(R_i^2\\\\)$ is the coefficient of determination when $\\\\(X_i\\\\)$ is regressed on the other predictors. VIF values greater than 5 (or 10, depending on context) indicate potentially problematic collinearity.\n\n\n## Real-World Examples\n\n### 1. Economy Example (US Macro Data)\n\n*Dataset:* **us_change** (available in the `fpp3` package)  \n*Model:*  \n\n$$\n\\text{Consumption}_t = \\beta_0 + \\beta_1 \\text{Income}_t + \\beta_2 \\text{Production}_t + \\varepsilon_t\n$$\n\nIn this example, we explore how Income and Production drive Consumption. We then use VIF to diagnose multicollinearity.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\n\n# Fit the TSLM model on us_change data\nmodel_macro <- us_change %>%\n  model(tslm_macro = TSLM(Consumption ~ Income + Production))\n\n# Display model coefficients\nmodel_macro %>%\n  tidy(tslm_macro) %>%\n  knitr::kable(caption = 'US Macro Model Coefficients')\n```\n\n::: {.cell-output-display}\n\n\nTable: US Macro Model Coefficients\n\n|.model     |term        |  estimate| std.error| statistic|  p.value|\n|:----------|:-----------|---------:|---------:|---------:|--------:|\n|tslm_macro |(Intercept) | 0.5106790| 0.0477604| 10.692528| 0.00e+00|\n|tslm_macro |Income      | 0.1842811| 0.0427041|  4.315301| 2.53e-05|\n|tslm_macro |Production  | 0.1925038| 0.0252739|  7.616697| 0.00e+00|\n\n\n:::\n\n```{.r .cell-code}\n# Compute VIF values using a standard lm object\nmacro_lm <- lm(Consumption ~ Income + Production, data = us_change)\nvif_macro <- car::vif(macro_lm)\nvif_macro\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Income Production \n  1.078113   1.078113 \n```\n\n\n:::\n:::\n\n### 2. COVID Example (Mobility)\n\n*Dataset:* **oxcgrt** (Oxford COVID Policy Tracker)  \n\n*Model:*  \n\n$$\n\\log(\\text{ConfirmedCases}_t) = \\beta_0 + \\beta_1 \\text{ConfirmedDeaths}_t + \\beta_2 \\text{StringencyIndexAverage}_t + \\varepsilon_t\n$$\n\nHere, we investigate the effect of COVID-19 deaths and policy stringency on the growth of confirmed cases, using a log-transformation to account for exponential growth. VIF is computed to check for multicollinearity between the predictors.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nurl <- \"https://github.com/OxCGRT/covid-policy-dataset/raw/main/data/OxCGRT_compact_national_v1.csv\"\noxcgrt <- read_csv(url)\n\n# Filter for the United States and create a log-transformed 'ConfirmedCases' variable\noxcgrt_us <- oxcgrt %>% \n  filter(CountryName == 'United States') %>% \n  mutate(Date = ymd(Date),\n         log_ConfirmedCases = log(1 + ConfirmedCases)) %>% \n  as_tsibble(index = Date) %>% \n  drop_na(log_ConfirmedCases, ConfirmedDeaths, StringencyIndex_Average)\n\n# Fit the TSLM model\nmodel_covid <- oxcgrt_us %>%\n  model(tslm_covid = TSLM(log_ConfirmedCases ~ ConfirmedDeaths + StringencyIndex_Average))\n\n# Display model coefficients\nmodel_covid %>% \n  tidy(tslm_covid) %>%\n  knitr::kable(caption = 'COVID Model Coefficients')\n```\n\n::: {.cell-output-display}\n\n\nTable: COVID Model Coefficients\n\n|.model     |term                    |  estimate| std.error| statistic| p.value|\n|:----------|:-----------------------|---------:|---------:|---------:|-------:|\n|tslm_covid |(Intercept)             | 1.7724524| 0.0956172|  18.53696|       0|\n|tslm_covid |ConfirmedDeaths         | 0.0000113| 0.0000001| 156.84617|       0|\n|tslm_covid |StringencyIndex_Average | 0.1578871| 0.0013481| 117.12148|       0|\n\n\n:::\n\n```{.r .cell-code}\n# Compute VIF values using a standard lm object (car::vif works with lm)\ncovid_lm <- lm(log_ConfirmedCases ~ ConfirmedDeaths + StringencyIndex_Average, data = as_tibble(oxcgrt_us))\nvif_covid <- car::vif(covid_lm)\nvif_covid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        ConfirmedDeaths StringencyIndex_Average \n               1.270702                1.270702 \n```\n\n\n:::\n:::\n\n\n### Lab Activity 1: Assessing Multicollinearity in US Macro Data\n\n**Prompt:**  \n\n1. Using the **us_change** dataset, fit a TSLM model with Consumption as the response and all of the remaining variables as predictors.  \n2. Compute the VIF for each predictor using the `car::vif()` function.  \n3. Interpret the VIF values and discuss whether there is evidence of multicollinearity.\n\n\n**Solution:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit the TSLM model on us_change data\nmodel_macro_lab <- us_change %>%\n  model(tslm_macro_lab = TSLM(Consumption ~ .))\n\n# Convert to an lm object for VIF computation\nmacro_lm_lab <- lm(Consumption ~ ., data = us_change)\nvif_macro_lab <- car::vif(macro_lm_lab)\nvif_macro_lab\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Quarter       Income   Production      Savings Unemployment \n    1.118319     2.713012     2.709416     2.533910     2.784650 \n```\n\n\n:::\n:::\n\n\n\n### Lab Activity 2: Exploring COVID Policy Measures and Their Effects\n\n**Prompt:**  \n\n1. Using the **oxcgrt** dataset for the United States, create a new variable `log_ConfirmedDeaths` as $\\\\(\\\\log(1 + \\text{ConfirmedDeaths})\\\\)$.  \n2. Fit a TSLM model with `ConfirmedCases`, `StringencyIndex_Average`, `C6M_Stay at home requirements` as predictors for `log_ConfirmedDeaths`.  \n3. Compute the VIF for the predictors and interpret the results in terms of potential collinearity.\n\n\n\n**Solution:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter and transform the data\noxcgrt_lab <- oxcgrt %>% \n  filter(CountryName == 'United States') %>% \n  mutate(Date = ymd(Date),\n         log_ConfirmedDeaths = log(1 + ConfirmedDeaths)) %>% \n  as_tsibble(index = Date) %>% \n  drop_na(ConfirmedCases, log_ConfirmedDeaths, StringencyIndex_Average)\n\n# Fit the TSLM model\nmodel_covid_lab <- oxcgrt_lab %>%\n  model(tslm_covid_lab = TSLM(log_ConfirmedDeaths ~ ConfirmedCases + StringencyIndex_Average + `C6M_Stay at home requirements`))\n\n# Convert to an lm object for VIF computation\ncovid_lm_lab <- lm(log_ConfirmedDeaths ~ ConfirmedCases + StringencyIndex_Average + `C6M_Stay at home requirements`, data = as_tibble(oxcgrt_lab))\nvif_covid_lab <- car::vif(covid_lm_lab)\nvif_covid_lab\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 ConfirmedCases         StringencyIndex_Average \n                       1.466983                        4.000390 \n`C6M_Stay at home requirements` \n                       3.786874 \n```\n\n\n:::\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}