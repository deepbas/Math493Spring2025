{
  "hash": "81e136ba2280934c7590c48a48ac8d4d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity28\"\nformat: html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - fpp3\n    - patchwork\n    - tsibbledata\n    - urca\n    - astsa\n    - gridExtra\n    - vars\n    - purrr\n    - FinTS\n    - tidyr\nwarning: false\nmessage: false\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(us_change)\nconsumption_ts <- us_change %>%\n  dplyr::select(Quarter, Consumption) %>%\n  as_tsibble(index = Quarter)\n```\n:::\n\n## **ARIMA Model Selection Strategy**:  \n\nThe grid search explores **non-seasonal $(p,d,q)$** and **seasonal $(P,D,Q)_m$** components, testing both integration orders ($d$) and seasonal differencing ($D$). Using **AICc** for selection balances fit and complexity, favoring the **ARIMA(2,1,2)(0,0,1)[4]** model with $\\text{AICc}= -540.9$. Seasonal PDQ terms use $m=4$ (quarterly data), but only a seasonal MA(1) component remains significant.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --------------------------\n# 1. Modeling \n# --------------------------\n\n# Create model grid of candidate orders\ngrid <- expand_grid(\n  non_seasonal = list(c(0,1,1), c(1,1,0), c(2,1,2)),\n  seasonal     = list(c(0,0,0), c(1,0,0,4), c(0,0,1,4))\n)\n\n# Define a safe ARIMA function that builds the model from candidate orders\nsafe_arima <- possibly(function(ts, ns, s) {\n  ts %>% \n    model(ARIMA(Consumption ~ pdq(ns[1], ns[2], ns[3]) + PDQ(s[1], s[2], s[3], period = s[4])))\n}, otherwise = NULL)\n\n# Fit the candidate models and collect the results as a mable\nresults <- grid %>% \n  rowwise() %>% \n  mutate(\n    model   = list(safe_arima(consumption_ts, non_seasonal, seasonal)),\n    ns_str  = paste(non_seasonal, collapse = \",\"),\n    s_str   = paste(seasonal, collapse = \",\")\n  ) %>% \n  ungroup() %>% \n  filter(!map_lgl(model, is.null)) %>% \n  mutate(info = map(model, ~ glance(.x))) %>% \n  unnest(info)\n\n# Compare models by AICc \nbest_model <- results %>% arrange(AICc) %>% slice(1)\nbest_model \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 13\n  non_seasonal seasonal  model    ns_str s_str .model sigma2 log_lik   AIC  AICc\n  <list>       <list>    <list>   <chr>  <chr> <chr>   <dbl>   <dbl> <dbl> <dbl>\n1 <dbl [3]>    <dbl [4]> <mdl_df> 0,1,1  0,0,… \"ARIM…  0.369   -181.  367.  367.\n# ℹ 3 more variables: BIC <dbl>, ar_roots <list>, ma_roots <list>\n```\n\n\n:::\n:::\n\n\n## **Residual Diagnostics**:  \n\nThe Ljung-Box test ($p=0.245$) confirms white noise residuals, while the ARCH test ($p=0.56$) shows no volatility clustering. The seasonal plot reveals no systematic seasonal patterns in residuals, supporting model adequacy.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --------------------------\n# 2. Diagnostics\n# --------------------------\n\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  features(.resid, ~ljung_box(.x, lag = 20))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .model                                                       lb_stat lb_pvalue\n  <chr>                                                          <dbl>     <dbl>\n1 \"ARIMA(Consumption ~ pdq(ns[1], ns[2], ns[3]) + PDQ(s[1], s…    23.9     0.245\n```\n\n\n:::\n\n```{.r .cell-code}\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  gg_tsdisplay(.resid, plot_type = \"season\") +\n  labs(title = \"Residual Diagnostics with Seasonal Analysis\")\n```\n\n::: {.cell-output-display}\n![](activity28_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  features(.resid^2, list(arch_test = ~ FinTS::ArchTest(.x, lags = 5)$p.value))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  .model                                                  arch_test_Chi-square…¹\n  <chr>                                                                    <dbl>\n1 \"ARIMA(Consumption ~ pdq(ns[1], ns[2], ns[3]) + PDQ(s[…                  0.560\n# ℹ abbreviated name: ¹​`arch_test_Chi-squared`\n```\n\n\n:::\n:::\n\n\n## **Forecast Uncertainty**:  \n\nThe fan chart shows widening prediction intervals ($\\pm2\\sigma$), reflecting increased uncertainty for longer horizons - a hallmark of **Box-Jenkins** forecasts. The stable trend projection suggests the model captured the consumption series' momentum.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --------------------------\n# 3. Forecasting\n# --------------------------\n\n# Generate forecasts for all viable models\nensemble_forecast <- best_model %>% \n  pull(model) %>% \n  .[[1]]  %>% \n  forecast(h = 8) \n\n# Visualize forecast distributions\nensemble_forecast %>% \n  autoplot() +\n  autolayer(consumption_ts, Consumption) +\n  labs(title = \"SARIMA Forecasts\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](activity28_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Lab Activity: Beer Production Analysis  \n\nApply the same methodology to `aus_production` (quarterly Australian beer production):\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Prepare data\nbeer_ts <- aus_production %>%\n  dplyr::select(Quarter, Beer) %>%\n  as_tsibble(index = Quarter)\n\n# 2. Modify model grid (adapt seasonal PDQ orders)\ngrid_beer <- expand_grid(\n  non_seasonal = list(c(1,1,1), c(0,1,2), c(2,1,2)),\n   seasonal = list(\n    c(0,0,0,4),        # No seasonal terms\n    c(1,1,0,4),        # Seasonal AR(1) + differencing\n    c(0,1,1,4)         # Seasonal MA(1) + differencing\n  )\n)\n\ngrid_beer %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|non_seasonal |seasonal   |\n|:------------|:----------|\n|1, 1, 1      |0, 0, 0, 4 |\n|1, 1, 1      |1, 1, 0, 4 |\n|1, 1, 1      |0, 1, 1, 4 |\n|0, 1, 2      |0, 0, 0, 4 |\n|0, 1, 2      |1, 1, 0, 4 |\n|0, 1, 2      |0, 1, 1, 4 |\n|2, 1, 2      |0, 0, 0, 4 |\n|2, 1, 2      |1, 1, 0, 4 |\n|2, 1, 2      |0, 1, 1, 4 |\n\n\n:::\n:::\n\n\nKey differences to assess:\n\n- Does beer data require stronger seasonal differencing (D=1)?\n- Compare AICc values for models with/without seasonal terms\n- Check if residuals show remaining production cycle patterns\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generic-safe ARIMA function\nsafe_arima <- possibly(function(ts, ns, s) {\n  ts %>% \n    model(ARIMA(Beer ~ pdq(ns[1], ns[2], ns[3]) +  \n                PDQ(s[1], s[2], s[3], period = s[4])))\n}, otherwise = NULL) \n\n\n# Fit the candidate models and collect the results as a mable\nresults_beer <- grid_beer %>% \n  rowwise() %>% \n  mutate(\n    model   = list(safe_arima(beer_ts, non_seasonal, seasonal)),\n    ns_str  = paste(non_seasonal, collapse = \",\"),\n    s_str   = paste(seasonal, collapse = \",\")\n  ) %>% \n  ungroup() %>% \n  filter(!map_lgl(model, is.null)) %>% \n  mutate(info = map(model, ~ glance(.x))) %>% \n  unnest(info)\n\n# Compare models by AICc \nbest_model <- results_beer %>% arrange(AICc) %>% slice(1)\nbest_model \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 13\n  non_seasonal seasonal  model    ns_str s_str .model sigma2 log_lik   AIC  AICc\n  <list>       <list>    <list>   <chr>  <chr> <chr>   <dbl>   <dbl> <dbl> <dbl>\n1 <dbl [3]>    <dbl [4]> <mdl_df> 0,1,2  0,1,… \"ARIM…   240.   -886. 1781. 1781.\n# ℹ 3 more variables: BIC <dbl>, ar_roots <list>, ma_roots <list>\n```\n\n\n:::\n\n```{.r .cell-code}\nresults_beer %>% \n  dplyr::select(ns_str, s_str, AICc) %>% \n  arrange(AICc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  ns_str s_str    AICc\n  <chr>  <chr>   <dbl>\n1 0,1,2  0,1,1,4 1781.\n2 1,1,1  0,1,1,4 1785.\n3 2,1,2  0,1,1,4 1785.\n4 2,1,2  1,1,0,4 1817.\n5 1,1,1  1,1,0,4 1824.\n6 0,1,2  1,1,0,4 1825.\n7 2,1,2  0,0,0,4 2061.\n8 0,1,2  0,0,0,4 2261.\n9 1,1,1  0,0,0,4 2327.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --------------------------\n# 2. Diagnostics\n# --------------------------\n\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  features(.resid, ~ljung_box(.x, lag = 20))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .model                                                       lb_stat lb_pvalue\n  <chr>                                                          <dbl>     <dbl>\n1 \"ARIMA(Beer ~ pdq(ns[1], ns[2], ns[3]) + PDQ(s[1], s[2], s[…    14.9     0.780\n```\n\n\n:::\n\n```{.r .cell-code}\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  gg_tsdisplay(.resid, plot_type = \"season\") +\n  labs(title = \"Residual Diagnostics with Seasonal Analysis\")\n```\n\n::: {.cell-output-display}\n![](activity28_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  residuals() %>% \n  features(.resid^2, list(arch_test = ~ FinTS::ArchTest(.x, lags = 5)$p.value))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  .model                                                  arch_test_Chi-square…¹\n  <chr>                                                                    <dbl>\n1 \"ARIMA(Beer ~ pdq(ns[1], ns[2], ns[3]) + PDQ(s[1], s[2…                  0.866\n# ℹ abbreviated name: ¹​`arch_test_Chi-squared`\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_model %>% \n  pull(model) %>% \n  .[[1]] %>% \n  forecast(h=12) %>% \n  autoplot(beer_ts) +\n  labs(title = \"Beer Production Forecast with Seasonal Differencing\")\n```\n\n::: {.cell-output-display}\n![](activity28_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n",
    "supporting": [
      "activity28_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}