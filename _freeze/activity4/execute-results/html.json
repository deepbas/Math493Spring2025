{
  "hash": "ff0a2fb072c50fb984d6f2788b0d12d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity4\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss]\nengine: knitr\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n### 1. MA(1) Process  \n\nThe **Moving Average of Order 1 (MA(1))** process is defined as:  \n\n$$\nX_t = \\varepsilon_t + \\theta \\varepsilon_{t-1}\n$$  \nwhere $\\varepsilon_t$ is white noise with variance $\\sigma^2$.\n\n#### Key Properties:  \n\n- **Short Memory**: The autocorrelation function (ACF) cuts off after lag 1.  \n- **Variance**: $\\gamma(0) = \\sigma^2(1 + \\theta^2)$.  \n- **Covariance**: $\\gamma(1) = \\theta \\sigma^2$.  \n\n#### Simulation in R:  \n\n::: {.cell}\n\n```{.r .cell-code}\n# MA(1) simulation\nn <- 200\ntheta <- 0.8\neps <- rnorm(n + 1)  # ε_0 to ε_n\nma_values <- numeric(n)\nfor(t in 1:n) {\n  ma_values[t] <- eps[t+1] + theta*eps[t]  # X_t = ε_t + θε_{t-1}\n}\n\nma1 <- tsibble(time = 1:n, y = ma_values, index = time)\n# Plot\nggplot(ma1, aes(x = time, y = y)) +\n  geom_line() +\n  labs(title = \"MA(1) Process\", x = \"Time\", y = \"X_t\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](activity4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n---\n\n### 2. AR(1) Process  \n\nThe **Autoregressive of Order 1 (AR(1))** process is defined as:  \n\n$$\nX_t = \\phi X_{t-1} + \\varepsilon_t\n$$  \nwhere $\\varepsilon_t$ is white noise with variance $\\sigma^2$.\n\n#### Key Properties:  \n\n- **Stationarity**: Requires $|\\phi| < 1$.  \n- **ACF**: Decays exponentially as $\\rho(k) = \\phi^k$.  \n- **PACF**: Cuts off after lag 1.  \n\n#### Simulation in R:  \n\n::: {.cell}\n\n```{.r .cell-code}\n# AR(1) simulation\nn <- 200\nphi <- 0.8\neps <- rnorm(n)\nar_values <- numeric(n)\nar_values[1] <- eps[1]  # X_1 = ε_1\nfor(t in 2:n) {\n  ar_values[t] <- phi*ar_values[t-1] + eps[t]\n}\n\nar1 <- tsibble(time = 1:n, y = ar_values, index = time)\n# Plot\nggplot(ar1, aes(x = time, y = y)) +\n  geom_line() +\n  labs(title = \"AR(1) Process\", x = \"Time\", y = \"X_t\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](activity4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n---\n\n### 3. Random Walk with Drift  \n\nThe **Random Walk with Drift** is defined as:  \n\n$$\nX_t = \\delta + X_{t-1} + \\varepsilon_t\n$$  \nwhere $\\varepsilon_t$ is white noise with variance $\\sigma^2$, and $\\delta$ is the drift term.\n\n#### Key Characteristics:  \n\n- **Non-Stationarity**: Variance grows with time, $\\operatorname{Var}(X_t) = t \\sigma^2$.  \n\n### Simulation in R:  \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tsibble)\nlibrary(feasts)\n\n# Random Walk with Drift simulation\nn <- 100\ndelta <- 0.1\nrw_values <- cumsum(delta + rnorm(n))  # Cumulative sum of (δ + ε_t)\n\nrw_drift <- tsibble(time = 1:n, y = rw_values, index = time)\nautoplot(rw_drift, y) + labs(title = \"Random Walk with Drift\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](activity4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Lab Activity: More Simulations and Comparisons\n\n## Q1: MA(1) Process  \n\n**Prompt:** Simulate and visualize an MA(1) process with parameter θ = 0.9 using `tsibble` and `autoplot`.\n\n**Solution:**\n\n\n::: {.cell}\n```{webr}\n#| label: Activity4Lab1\n\nlibrary(patchwork)  \nset.seed(123)\nn <- 200\n\n# Create tsibble objects with explicit time indices\nma_ts <- tsibble(\n  time = 1:n,\n  value = {\n    eps <- rnorm(n + 1)\n    eps[-1] + 0.9 * eps[-(n + 1)]\n  },\n  index = time,\n  model = \"MA(1)\"\n)\n```\n:::\n\n\n## Q2: AR(1) Process  \n\n**Prompt:** Simulate and visualize an AR(1) process with parameter  $\\phi=0.96$ using `tsibble` and `autoplot`.\n\n**Solution:**\n\n\n::: {.cell}\n```{webr}\n#| label: Activity4Lab2\n\nar_ts <- tsibble(\n  time = 1:n,\n  value = {\n    eps <- rnorm(n)\n    ar <- numeric(n)\n    ar[1] <- eps[1]\n    for(t in 2:n) ar[t] <- 0.96 * ar[t-1] + eps[t]\n    ar\n  },\n  index = time,\n  model = \"AR(1)\"\n)\n```\n:::\n\n\n## Q3: Random Walk & Comparison\n\n**Prompt:** Create a random walk with drift $(\\delta = 0.2)$, then visualize all three processes together.\n\n\n**Solution:**\n\n\n::: {.cell}\n```{webr}\n#| label: Activity4Lab3\n\nrw_ts <- tsibble(\n  time = 1:n,\n  value = cumsum(0.2 + rnorm(n)),\n  index = time,\n  model = \"Random Walk with Drift\"\n)\n\ncombined_ts <- bind_rows(\n  as_tibble(ma_ts) %>% mutate(model = \"MA(1)\"),\n  as_tibble(ar_ts) %>% mutate(model = \"AR(1)\"),\n  as_tibble(rw_ts)\n) %>% \n  as_tsibble(index = time, key = model) %>% \n  mutate(model = factor(model, levels = c(\"MA(1)\", \"AR(1)\", \"Random Walk with Drift\")))\n\nautoplot(combined_ts) +\n  facet_grid(model ~ ., scales = \"free_y\") +\n  labs(title = \"Time Series Comparison\", y = \"Value\") +\n  theme_minimal()\n```\n:::\n\n\n\n",
    "supporting": [
      "activity4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}