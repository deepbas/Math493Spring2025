{
  "hash": "8f05d23d65fbf94b416237c19cce7bce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity3\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss]\nengine: knitr\ntoc: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Autocorrelation in Time Series\n\nAutocorrelation, also known as serial correlation, measures the correlation of a time series with its own past and future values. Mathematically, the autocorrelation function (ACF) at lag $k$ for a time series $\\{X_t\\}$ is defined as:\n\n$$\n\\rho_k = \\frac{\\text{Cov}(X_t, X_{t-k})}{\\sqrt{\\text{Var}(X_t) \\text{Var}(X_{t-k})}}\n$$\n\nwhere $\\rho_k$ measures the linear relationship between values $k$ time periods apart.\n\n- **Positive autocorrelation** at lag $k$: high values tend to follow high values and low values tend to follow low values after $k$ periods.\n- **Negative autocorrelation** at lag $k$: high values tend to follow low values and vice versa.\n- **No autocorrelation**: the series values $k$ periods apart are uncorrelated, suggesting randomness at that lag.\n\n## Partial Autocorrelation in Time Series\n\nPartial autocorrelation measures the correlation between a time series and its lagged values, after removing the influence of intermediate lags. In other words, it quantifies the direct relationship between $X_t$ and $X_{t-k}$, controlling for the effects of $X_{t-1}, X_{t-2}, \\dots, X_{t-k+1}$. Mathematically, the partial autocorrelation function (PACF) at lag $k$ for a time series $\\{X_t\\}$ is defined as:\n\n$$\n\\phi_{kk} = \\text{Corr}(X_t, X_{t-k} \\mid X_{t-1}, X_{t-2}, \\dots, X_{t-k+1})\n$$\n\nwhere $\\phi_{kk}$ represents the partial autocorrelation at lag $k$.\n\n- **Interpretation of PACF**:\n\n  - A significant partial autocorrelation at lag $k$ suggests a direct relationship between $X_t$ and $X_{t-k}$, independent of the intermediate lags.\n  - A non-significant partial autocorrelation indicates that the relationship between $X_t$ and $X_{t-k}$ is fully explained by the intermediate lags.\n\n\n- **Comparison with ACF**:\n\n  - While the ACF measures the total correlation between $X_t$ and $X_{t-k}$, the PACF isolates the direct correlation, making it a more precise tool for model identification.\n\n\n### Practical Illustration with Real Data\n\nWe will use real datasets from the `fpp3` package to compute and visualize autocorrelation. The following code snippets demonstrate how to plot the ACF and PACF for a time series, providing insights into its internal structure.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\n\naus_airpassengers %>%\n  ACF(Passengers) %>%             # Calculate autocorrelations for the Passengers series\n  autoplot() +                    # Plot the ACF\n  labs(title = \"ACF of Australian Air Passengers\", y = \"ACF\", x = \"Lag\")\n```\n\n::: {.cell-output-display}\n![](activity3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Example 2: Partial Autocorrelation of Australian Air Passengers\naus_airpassengers %>%\n  PACF(Passengers) %>%            # Calculate partial autocorrelations for the Passengers series\n  autoplot() +                    # Plot the PACF\n  labs(title = \"PACF of Australian Air Passengers\", y = \"PACF\", x = \"Lag\")\n```\n\n::: {.cell-output-display}\n![](activity3_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n## White Noise\n\n\n1. **White Noise**  \n\n   - **No autocorrelation**: $\\mathbb{E}[X_t X_{t-k}] = 0, \\quad \\forall k \\neq 0$  \n   - **Constant variance**: $\\operatorname{Var}(X_t) = \\sigma^2$  \n\n   The white noise process is defined as:  \n   $$\n   X_t = \\varepsilon_t, \\quad \\varepsilon_t \\stackrel{iid}{\\sim} \\mathcal{N}(0, \\sigma^2)\n   $$\n\n::: {.cell}\n\n```{.r .cell-code}\n# White Noise Simulation\nwn <- tsibble(time = 1:500, y = rnorm(500), index = time)\n\n# Visualize and test for autocorrelation\nwn %>% autoplot(y) + ggtitle(\"White Noise Process\")\n```\n\n::: {.cell-output-display}\n![](activity3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nwn %>% ACF(y) %>% autoplot()\n```\n\n::: {.cell-output-display}\n![](activity3_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nwn %>% features(y, ljung_box, lag = 10)  # Should retain H₀ (no autocorrelation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lb_stat lb_pvalue\n    <dbl>     <dbl>\n1    7.71     0.658\n```\n\n\n:::\n:::\n\n2. **Portmanteau (Ljung-Box) Test**  \n\n   - **Null hypothesis ($H_0$)**: No autocorrelation up to lag $h$  \n   - **Test statistic**:  \n     $$\n     Q = n(n+2) \\sum_{k=1}^{h} \\frac{\\hat{\\rho}_k^2}{n-k} \\sim \\chi^2_h\n     $$\n\n::: {.cell}\n\n```{.r .cell-code}\nwn %>% features(y, ljung_box, lag = 10)  # p > 0.05 ⇒ retain H₀ (white noise)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lb_stat lb_pvalue\n    <dbl>     <dbl>\n1    7.71     0.658\n```\n\n\n:::\n:::\n\n3. **Practical Verification**  \n   - Simulate contaminated white noise to test robustness: \n   \n::: {.cell}\n\n```{.r .cell-code}\ncontaminated_wn <- wn %>% \n mutate(y = y + 0.3*lag(y, 5) %>% replace_na(0))\n```\n:::\n\n   - Visualize and test the contaminated series:  \n   \n::: {.cell}\n\n```{.r .cell-code}\ncontaminated_wn %>% \n ACF(y) %>% \n autoplot() + \n ggtitle(\"ACF of Contaminated Series\")\n```\n\n::: {.cell-output-display}\n![](activity3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncontaminated_wn %>% \n features(y, ljung_box, lag = 10)  # p < 0.05 ⇒ reject H₀\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lb_stat  lb_pvalue\n    <dbl>      <dbl>\n1    44.7 0.00000251\n```\n\n\n:::\n:::\n\n\n### Lab Activity: White Noise Series, ACF, and Portmanteau Test\n\n1. **Simulate a White Noise Series**  \n\n   Generate a white noise series of length $n = 500$ using the equation:\n   $$\n   X_t = \\varepsilon_t, \\quad \\varepsilon_t \\stackrel{iid}{\\sim} \\mathcal{N}(0, 1)\n   $$\n   Plot the series.\n\n2. **Plot the ACF**  \n\n   Compute and plot the autocorrelation function (ACF) of the white noise series. Interpret the results.\n\n3. **Contaminate the Series**  \n\n   Introduce contamination into the white noise series by adding a lagged component:\n   $$\n   Y_t = X_t + 0.4 \\cdot X_{t-3}\n   $$\n   Replace missing values with 0. Plot the contaminated series.\n\n4. **Plot the ACF of the Contaminated Series**  \n\n   Compute and plot the ACF of the contaminated series. Compare it with the ACF of the original white noise series.\n\n5. **Perform the Portmanteau (Ljung-Box) Test**  \n\n   - Apply the Ljung-Box test to the original white noise series. Interpret the results.\n   - Apply the Ljung-Box test to the contaminated series. Interpret the results.\n   \n\n::: {.cell}\n```{webr}\n#| label: Activity3Lab1\n# 1. Simulate White Noise\nwn <- tsibble(time = 1:500, y = rnorm(500), index = time)\nwn %>% autoplot(y) + ggtitle(\"White Noise Process\")\n\n# 2. Plot ACF of White Noise\nwn %>% ACF(y) %>% autoplot() + ggtitle(\"ACF of White Noise\")\n\n# 3. Contaminate the Series\ncontaminated_wn <- wn %>% \n  mutate(y = y + 0.3 * lag(y, 5) %>% replace_na(0))\ncontaminated_wn %>% autoplot(y) + ggtitle(\"Contaminated White Noise Process\")\n\n# 4. Plot ACF of Contaminated Series\ncontaminated_wn %>% \n  ACF(y) %>% \n  autoplot() + \n  ggtitle(\"ACF of Contaminated Series\")\n\n# 5. Perform Ljung-Box Test\nwn %>% features(y, ljung_box, lag = 10)  # Test for original white noise\ncontaminated_wn %>% features(y, ljung_box, lag = 10)  # Test for contaminated series\n```\n:::\n\n",
    "supporting": [
      "activity3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}