{
  "hash": "1ef22280629351d4d6edd5f73102e25a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity6\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - fpp3\n    - patchwork\n    - tsibbledata\nwarning: false\nmessage: false\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n### Stationarity and Unit Root Tests \n\n### **What is a Unit Root?**\n\nA unit root is a characteristic of a time series that makes it non-stationary. If a series has a unit root, it means that shocks to the system have a permanent effect, and the series does not revert to a long-term mean. Examples include random walks and random walks with drift.\n\n\n### **Augmented Dickey-Fuller (ADF) Test**\n\nThe ADF test is used to test for the presence of a unit root in a time series. The null hypothesis ($H_0$) is that the series has a unit root (i.e., it is non-stationary). The alternative hypothesis ($H_1$) is that the series is stationary. If the p-value from the ADF test is less than a significance level (e.g., 0.05), we reject the null hypothesis and conclude that the series is stationary.\n\n\n### **KPSS Test**\n\nThe KPSS test is another test for stationarity, but it has a different null hypothesis. The null hypothesis ($H_0$) for the KPSS test is that the series is stationary (around a deterministic trend). The alternative hypothesis ($H_1$) is that the series has a unit root (i.e., it is non-stationary). If the p-value is less than the significance level, we reject the null hypothesis and conclude that the series is non-stationary.\n\n\n\n### **Key Differences Between ADF and KPSS Tests**\n\n1. **Null Hypothesis**:\n\n   - ADF: $H_0$ = Series has a unit root (non-stationary).\n   - KPSS: $H_0$ = Series is stationary (around a deterministic trend).\n\n2. **Interpretation**:\n\n   - ADF: Rejecting $H_0$ implies stationarity.\n   - KPSS: Rejecting $H_0$ implies non-stationarity.\n\n3. **Use Case**:\n\n   - ADF is more commonly used to test for unit roots.\n   - KPSS is often used as a complementary test to confirm stationarity.\n\n\n\n#### Step 1: Simulate an AR(1) Process\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulate AR(1) process\nset.seed(123)\nn <- 1000\nphi <- 0.9\nar1 <- tsibble(t = 1:n, y = arima.sim(model = list(ar = phi), n = n), index = t)\n\n# Plot the AR(1) process\nautoplot(ar1, y) + labs(title = \"Simulated AR(1) Process\")\n```\n\n::: {.cell-output-display}\n![](activity6_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Perform ADF test\nadf_test <- adf.test(ar1$y)\nadf_test\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  ar1$y\nDickey-Fuller = -5.8012, Lag order = 9, p-value = 0.01\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform KPSS test\nkpss_test <- ar1 %>%\n  features(y, unitroot_kpss)\nkpss_test\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1     0.195         0.1\n```\n\n\n:::\n:::\n\n#### Step 2: Simulate a Random Walk with Drift\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulate Random Walk with Drift\nset.seed(123)\nn <- 100\ndrift <- 0.1\nrw_drift <- tsibble(t = 1:n, y = cumsum(rnorm(n, mean = drift)), index = t)\n\n# Plot the Random Walk with Drift\nautoplot(rw_drift, y) + labs(title = \"Simulated Random Walk with Drift\")\n```\n\n::: {.cell-output-display}\n![](activity6_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Perform ADF test\nadf_test_rw <- adf.test(rw_drift$y)\nadf_test_rw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  rw_drift$y\nDickey-Fuller = -1.8871, Lag order = 4, p-value = 0.6234\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform KPSS test\nkpss_test_rw <- rw_drift %>%\n  features(y, unitroot_kpss)\nkpss_test_rw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1      1.86        0.01\n```\n\n\n:::\n:::\n\n#### Step 3: Interpret the Results\n\n- **AR(1) Process**: The ADF test indicates stationarity (reject $H_0$), and the KPSS test indicates stationarity (fail to reject $H_0$) as well.\n- **Random Walk with Drift**: The ADF test indicates non-stationarity (fail to reject $H_0$), and the KPSS test indicates non-stationarity (reject $H_0$) as well.\n\n\n\n#### Step 4: Apply to Real-World Data (S&P 500 Prices)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get S&P 500 data in tidy format\nsp500 <- tq_get(\"^GSPC\", \n                from = \"2010-01-01\", \n                to = \"2023-01-01\",\n                get = \"stock.prices\") %>%\n  select(date, adjusted) %>%  # Use adjusted closing prices\n  rename(price = adjusted) %>% \n  as_tsibble(index = date)  # Convert to tsibble with date index\n\n# Plot the S&P 500 series\nautoplot(sp500, price) + labs(title = \"S&P 500 Price Series\")\n```\n\n::: {.cell-output-display}\n![](activity6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Perform ADF test on the original series\nadf_test_sp500 <- adf.test(sp500$price)\nadf_test_sp500\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  sp500$price\nDickey-Fuller = -2.8302, Lag order = 14, p-value = 0.2268\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform KPSS test on the original series\nkpss_test_sp500 <- sp500 %>%\n  features(price, unitroot_kpss)\nkpss_test_sp500\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1      30.1        0.01\n```\n\n\n:::\n\n```{.r .cell-code}\n# Difference the series and perform ADF test\ndiff_sp500 <- sp500 %>% mutate(price = difference(price)) %>% tidyr::drop_na()\nadf_test_diff_sp500 <- adf.test(diff_sp500$price)\nadf_test_diff_sp500\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  diff_sp500$price\nDickey-Fuller = -15.29, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform KPSS test on the differenced series\nkpss_test_diff_sp500 <- diff_sp500 %>%\n  features(price, unitroot_kpss)\nkpss_test_diff_sp500\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1    0.0471         0.1\n```\n\n\n:::\n:::\n\n\n## Lab Activity\n\nRepeat the stationarity and unit root analysis (using ADF and KPSS tests) for NVIDIA (NVDA) stock prices from 2010-01-01 to 2023-01-01. Apply differencing or other transformations as needed to achieve stationarity, and interpret the results. \n\n**Solution:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Get NVIDIA (NVDA) stock data\nnvda <- tq_get(\"NVDA\", \n               from = \"2010-01-01\", \n               to = \"2023-01-01\",\n               get = \"stock.prices\") %>%\n  select(date, adjusted) %>%  # Use adjusted closing prices\n  rename(price = adjusted) %>% \n  as_tsibble(index = date)  # Convert to tsibble with date index\n\n# Step 2: Plot the NVIDIA stock price series\nautoplot(nvda, price) + \n  labs(title = \"NVIDIA (NVDA) Stock Price Series\", \n       x = \"Date\", \n       y = \"Adjusted Closing Price\")\n```\n\n::: {.cell-output-display}\n![](activity6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Step 3: Perform ADF test on the original series\nadf_test_nvda <- adf.test(nvda$price)\nadf_test_nvda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  nvda$price\nDickey-Fuller = -2.3583, Lag order = 14, p-value = 0.4266\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 4: Perform KPSS test on the original series\nkpss_test_nvda <- nvda %>%\n  features(price, unitroot_kpss)\nkpss_test_nvda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1      22.2        0.01\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 5: Difference the series to achieve stationarity\ndiff_nvda <- nvda %>% mutate(price = difference(price))\n\n# Step 6: Plot the differenced series\nautoplot(diff_nvda, price) + \n  labs(title = \"Differenced NVIDIA (NVDA) Stock Price Series\", \n       x = \"Date\", \n       y = \"Differenced Price\")\n```\n\n::: {.cell-output-display}\n![](activity6_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Step 7: Perform ADF test on the differenced series\nadf_test_diff_nvda <- adf.test(na.omit(diff_nvda$price))\nadf_test_diff_nvda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  na.omit(diff_nvda$price)\nDickey-Fuller = -14.601, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 8: Perform KPSS test on the differenced series\nkpss_test_diff_nvda <- diff_nvda %>%\n  features(price, unitroot_kpss)\nkpss_test_diff_nvda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1    0.0934         0.1\n```\n\n\n:::\n:::\n\n\n",
    "supporting": [
      "activity6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}