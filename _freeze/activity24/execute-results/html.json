{
  "hash": "5d604c675497e92779f97f8f781c4eef",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity24\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - fpp3\n    - patchwork\n    - tsibbledata\n    - urca\n    - astsa\n    - gridExtra\n    - vars\nwarning: false\nmessage: false\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n### Theoretical Background: Volatility Clustering  \n\n**Volatility clustering** (periods of high/low variability persisting) violates ARIMA's constant variance assumption. Common in COVID-19 cases (waves) and stock returns (crashes). **ARCH** (Autoregressive Conditional Heteroskedasticity) tests help detect this phenomenon.  \n\n#### Mathematical Foundation  \n\n- **ARCH Model**:  \n\n  The ARCH(q) model for volatility is defined as:  \n  $$  \n  \\begin{align*}  \n  r_t &= \\mu_t + \\epsilon_t, \\quad \\epsilon_t = \\sigma_t z_t, \\\\  \n  \\sigma_t^2 &= \\alpha_0 + \\alpha_1 \\epsilon_{t-1}^2 + \\dots + \\alpha_q \\epsilon_{t-q}^2  \n  \\end{align*}  \n  $$  \n  where $z_t \\sim N(0,1)$, and $\\alpha_0 > 0$, $\\alpha_i \\geq 0$.  \n\n- **Key Idea**:  \n\n  Variance $\\sigma_t^2$ depends on past squared residuals ($\\epsilon_{t-1}^2, \\dots, \\epsilon_{t-q}^2$), capturing volatility clustering.  \n  \n### Testing Steps  \n\n1. **Fit ARIMA Model**:  \n   Model the mean structure (e.g., log returns).  \n   \n2. **Extract Residuals**:  \n   Compute residuals $\\epsilon_t$ and squared residuals $\\epsilon_t^2$.  \n   \n3. **Visual Diagnostics**:  \n   - Plot ACF/PACF of squared residuals.  \n   - Look for significant autocorrelation (sign of ARCH effects).  \n   \n4. **Statistical Tests**:  \n   - **Ljung-Box Test**: Tests autocorrelation in $\\epsilon_t^2$.  \n   - **Engle’s ARCH Test**: Formal Lagrange Multiplier (LM) test for ARCH effects.  \n\n\n### Example 1: COVID-19 Cases  \n\n#### Data Preparation  \n\nUse the `COVID19` package to fetch daily confirmed cases in Italy (clear volatility during waves):  \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(COVID19)\nlibrary(fpp3)\n\n# Get data\ncovid_data <- covid19(country = \"Italy\", level = 1, verbose = FALSE) %>%\n  as_tsibble(index = date) %>%\n  mutate(new_cases = difference(confirmed)) %>%\n  mutate(log_new_cases = difference(log(confirmed))) %>%\n  drop_na(log_new_cases, new_cases) %>% \n  mutate(scaled_cases = scale(log_new_cases))\n```\n:::\n\n#### Model Fitting & Volatility Check  \n\nFit an ARIMA model to `new_cases` and inspect residuals:  \n\n::: {.cell}\n\n```{.r .cell-code}\nfit_covid <- covid_data %>%\n  model(ARIMA(scaled_cases ~ pdq(2,1,1) + PDQ(0,0,0)))\n\n# Check residuals for volatility clustering\nfit_covid %>% gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\naugment(fit_covid) %>%\n  ggplot(aes(x = date, y = .resid^2)) +\n  geom_line() + labs(title = \"Squared Residuals (COVID-19 Cases)\")\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nfit_covid %>% \n  augment() %>% \n  features(.innov,~ljung_box(.x, lag=24, dof=4)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .model                                            lb_stat lb_pvalue\n  <chr>                                               <dbl>     <dbl>\n1 ARIMA(scaled_cases ~ pdq(2, 1, 1) + PDQ(0, 0, 0))    920.         0\n```\n\n\n:::\n:::\n\n**Key Observation**: Squared residuals cluster many times between January 2020 and January 2023 (COVID waves), indicating volatility clustering.\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(fit_covid) %>%\n  ggplot(aes(x = date, y = .resid^2)) +\n  geom_line() + labs(title = \"Squared Residuals (COVID-19 Cases)\")\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Example 2: Stock Returns\n\n#### Data Preparation  \n\nFetch S&P 500 returns using `tq_get()` (more realistic volatility with irregular trading days):  \n\n::: {.cell}\n\n```{.r .cell-code}\n# Get S&P 500 data and calculate daily returns\nsp500 <- tq_get(\"^GSPC\", get = \"stock.prices\", from = \"2000-01-01\") %>%\n  as_tsibble(index = date) %>%  \n  fill_gaps() %>% \n  fill(close, .direction = \"down\") %>% \n  mutate(return = difference(log(close))) %>%  \n  drop_na(return)           \n```\n:::\n\n#### Model Fitting & Volatility Check  \n\n::: {.cell}\n\n```{.r .cell-code}\nfit_sp500 <- sp500 %>%\n  model(ARIMA(return ~ pdq(1,0,1)))  \n\n# Visualize squared residuals for volatility clustering\naugment(fit_sp500) %>%\n  ggplot(aes(x = date, y = .resid^2)) +\n  geom_line(alpha = 0.6) +\n  labs(title = \"Squared Residuals (S&P 500 Returns)\")\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n**Key Observations**:  \n\n- Squared residuals cluster during crises (e.g., 2008 financial crisis, 2020 COVID crash).  \n- ARIMA assumes *constant variance* — clustered residuals violate this, signaling **volatility clustering**.  \n\n\n### Fix: COVID-19 Cases   \n\n#### 1. **Extract Residuals**  \n\nFirst, extract residuals from the ARIMA model:  \n\n::: {.cell}\n\n```{.r .cell-code}\n# For COVID-19 example:\ncovid_resid <- augment(fit_covid) %>% \n  select(date, .resid)\n```\n:::\n\n#### 2. **Visual ARCH Test (ACF/PACF of Squared Residuals)**  \n\nPlot autocorrelation in squared residuals:  \n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_resid %>%\n  mutate(resid_sq = .resid^2) %>%\n  gg_tsdisplay(resid_sq, plot_type = \"partial\") +\n  labs(title = \"ACF/PACF of Squared Residuals (COVID-19)\")\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n**Interpretation**:  \n- Significant spikes at lag 1 or higher → Evidence of ARCH effects.  \n\n#### 3. **Engle’s ARCH Test **  \n\nUse the `FinTS` package to test ARCH effects on residuals: \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(FinTS)  # install.packages(\"FinTS\")\n\n# Extract residual vector\nresid_vector <- covid_resid %>% pull(.resid)\n\n# Engle’s ARCH test (lag = 5)\nArchTest(resid_vector, lags = 5, demean = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tARCH LM-test; Null hypothesis: no ARCH effects\n\ndata:  resid_vector\nChi-squared = 273.72, df = 5, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n**Conclusion**: If $p < 0.05$, reject the null (ARCH effects exist).\n\n### Next Steps: GARCH Modeling  \n\nIf ARCH effects are detected, use the `rugarch` package to model volatility: \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rugarch)  # install.packages(\"rugarch\")\n\n# Fit ARIMA(1,0,1)-GARCH(1,1)\nspec <- ugarchspec(\n  mean.model = list(armaOrder = c(1,1)), \n  variance.model = list(model = \"sGARCH\")\n)\nfit_garch <- ugarchfit(spec, data = resid_vector)\nplot(fit_garch, which = 10)\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### **Parameter Stability**\n\nCheck rolling estimates to assess model stability over time:\n\n::: {.cell}\n\n```{.r .cell-code}\nroll_fit <- ugarchroll(spec, data = resid_vector, n.ahead = 1, n.start = 1000)\nplot(roll_fit, which = 4)  # Rolling parameter estimates\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n### Lab activity: S&P 500 Returns \n\nRepeat the above steps for S&P Returns\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract residuals from ARIMA\nsp500_resid <- augment(fit_sp500) %>% select(date, .resid)\n\n# Engle’s test\nresid_sp500 <- sp500_resid %>% pull(.resid)\nArchTest(resid_sp500, lags = 5, demean = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tARCH LM-test; Null hypothesis: no ARCH effects\n\ndata:  resid_sp500\nChi-squared = 1049.2, df = 5, p-value < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# ACF/PACF of squared residuals\nsp500_resid %>%\n  mutate(resid_sq = .resid^2) %>%\n  gg_tsdisplay(resid_sq, plot_type = \"partial\")\n```\n\n::: {.cell-output-display}\n![](activity24_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "activity24_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}