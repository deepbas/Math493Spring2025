{
  "hash": "3201ba304a42fe5ae6c0a1328f78d1e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity5\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss]\nengine: knitr\ntoc: true\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n:::\n\n## Differencing, Transformations, and Stationarity\n\n### What is Stationarity?\n\nA time series is **stationary** if its statistical properties (mean, variance, autocorrelation) do not change over time. Stationarity is a key assumption for many time series models (e.g., ARIMA). Non-stationary series often exhibit:\n\n- **Trends**: A long-term increase or decrease in the data.\n- **Seasonality**: Periodic fluctuations.\n- **Changing Variance**: Variability that increases or decreases over time.\n\n### Transformations to Achieve Stationarity\n\n1. **Differencing**: Removes trends by computing the difference between consecutive observations.\n   - Formula: $\\nabla X_t = X_t - X_{t-1}$\n   \n2. **Log Transformation**: Stabilizes multiplicative variance by applying the natural logarithm.\n   - Formula: $Y_t = \\log(X_t)$\n   \n3. **Box-Cox Transformation**: A generalized power transformation that stabilizes variance and can handle non-linear trends.\n   - Formula: $Y_t = \\frac{X_t^\\lambda - 1}{\\lambda}$\n\n### Step 1: Visualize Non-Stationary Data\n\nWe start by loading and visualizing a non-stationary time series (Google stock prices).\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data\ngoogle <- read_csv(\"~/Desktop/Math493Spring25ClassMaterials/data/google.csv\")\ngoogle_stock <- google |> \n  as_tsibble() |> \n  mutate(LogClose = log(Close))  # Log-transform for later use\n\n# Plot original series\ngoogle_stock |>\n  autoplot(Close) +\n  labs(title = \"Google Stock Price (Non-Stationary)\", y = \"USD\")\n```\n\n::: {.cell-output-display}\n![](activity5_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n**Observation**: The upward trend indicates non-stationarity.\n\n### Step 2: Statistical Tests for Stationarity\n\nUse the **KPSS test** (null hypothesis: stationarity) and **ADF test** (null hypothesis: unit root) to confirm non-stationarity.\n\n::: {.cell}\n\n```{.r .cell-code}\n# KPSS test\ngoogle_stock |>\n  features(Close, unitroot_kpss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  kpss_stat kpss_pvalue\n      <dbl>       <dbl>\n1      10.6        0.01\n```\n\n\n:::\n\n```{.r .cell-code}\n# Suggested differencing order\ngoogle_stock |>\n  features(Close, unitroot_ndiffs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  ndiffs\n   <int>\n1      1\n```\n\n\n:::\n:::\n\n**Interpretation**:\n\n- KPSS p-value < 0.05 ⇒ Reject stationarity.\n\n- `unitroot_ndiffs` suggests the number of differences required (e.g., 1).\n\n---\n\n### Step 3: Apply Differencing\n\nDifferencing removes trends by computing the difference between consecutive observations.\n\n::: {.cell}\n\n```{.r .cell-code}\n# First difference\ngoogle_stationary <- google_stock |>\n  mutate(DiffClose = difference(Close))\n\n# Plot differenced series\ngoogle_stationary |>\n  autoplot(DiffClose) +\n  labs(title = \"Differenced Google Stock Price\", y = \"ΔUSD\")\n```\n\n::: {.cell-output-display}\n![](activity5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n**Observation**: The differenced series has a stabilized mean.\n\n\n### Step 4: Apply Log Transformation\n\nLog transformations stabilize multiplicative variance.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot original vs log-transformed series\ngoogle_stock |>\n  pivot_longer(c(Close, LogClose)) |>\n  autoplot(value) +\n  facet_grid(name ~ ., scales = \"free_y\") +\n  labs(title = \"Log Transformation Stabilizes Variance\")\n```\n\n::: {.cell-output-display}\n![](activity5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n**Observation**: The log-transformed series shows reduced variance amplification.\n\n---\n\n### Step 5: Apply Box-Cox Transformation\n\nThe Box-Cox transformation generalizes log and power transformations.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estimate optimal lambda\nlambda <- google_stock |>\n  features(Close, features = guerrero) |>\n  pull(lambda_guerrero)\n\n# Apply Box-Cox transformation\ngoogle_stock |>\n  mutate(BoxCoxClose = box_cox(Close, lambda)) |>\n  autoplot(BoxCoxClose) +\n  labs(title = \"Box-Cox Transformed Series\")\n```\n\n::: {.cell-output-display}\n![](activity5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n**Observation**: The Box-Cox transformation stabilizes both mean and variance.\n\n---\n\n## Lab Activity\n\n### Prompt 1: Load and Visualize Data\n\n1. Load the `global_economy` dataset from the `tsibble` package.\n2. Plot GDP for a specific country (e.g., \"United States\"). Assess stationarity visually.\n\n**Solution**:\n\n::: {.cell}\n```{webr}\nlibrary(tsibbledata)\ndata(\"global_economy\")\n\n# Plot GDP for the United States\nglobal_economy |>\n  filter(Country == \"United States\") |>\n  autoplot(GDP) +\n  labs(title = \"US GDP (Non-Stationary)\", y = \"GDP\")\n```\n:::\n\n\n### Prompt 2: Test for Stationarity\n\n1. Use the KPSS test to check for stationarity.\n2. Determine the required differencing order using `unitroot_ndiffs`.\n\n**Solution**:\n\n::: {.cell}\n```{webr}\n# KPSS test\nglobal_economy |>\n  filter(Country == \"United States\") |>\n  features(GDP, unitroot_kpss)\n\n# Differencing order\nglobal_economy |>\n  filter(Country == \"United States\") |>\n  features(GDP, unitroot_ndiffs)\n```\n:::\n\n\n### Prompt 3: Apply Transformations\n\n1. Apply first differencing to the GDP series.\n2. Apply a Box-Cox transformation using Guerrero’s method to estimate λ.\n3. Re-test stationarity using the KPSS test.\n\n**Solution**:\n\n::: {.cell}\n```{webr}\n# First difference\nus_gdp_diff <- global_economy |>\n  filter(Country == \"United States\") |>\n  mutate(DiffGDP = difference(GDP))\n\n# Box-Cox transformation\nlambda <- global_economy |>\n  filter(Country == \"United States\") |>\n  features(GDP, features = guerrero) |>\n  pull(lambda_guerrero)\n\nus_gdp_boxcox <- global_economy |>\n  filter(Country == \"United States\") |>\n  mutate(BoxCoxGDP = box_cox(GDP, lambda))\n\n# Re-test stationarity\nus_gdp_boxcox |>\n  features(BoxCoxGDP, unitroot_kpss)\n```\n:::\n\n\n",
    "supporting": [
      "activity5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}