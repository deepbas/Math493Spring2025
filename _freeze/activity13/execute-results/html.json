{
  "hash": "fa541bfb60e08d1ff70d91ce9ca6f409",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity13\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - fpp3\n    - patchwork\n    - tsibbledata\n    - urca\n    - astsa\n    - COVID19\nwarning: false\nmessage: false\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n\n## Seasonal Modeling\n\n**Seasonality** = Repeating patterns with *fixed known periods* (e.g., daily, weekly, yearly cycles). Differentiated from cycles by strict periodicity.\n\n## 1. **Fourier Spectral Analysis**\n\n**Frequency domain decomposition** using basis functions:\n\n$$S(t) = \\sum_{k=1}^K [a_k\\cos(2\\pi f_k t) + b_k\\sin(2\\pi f_k t)]$$\n\n**Critical parameters**:\n\n- *Nyquist frequency*: Max detectable frequency = $f_{\\text{max}} = \\frac{1}{2\\Delta t}$\n- *Frequency resolution*: $\\Delta f = \\frac{1}{N\\Delta t}$\n- *Number of harmonics (K)*: Balances complexity vs. overfitting\n\n**Harmonics** represent pairs of sine/cosine waves that collectively approximate complex seasonal patterns. Think of them as \"building blocks\" for seasonal shapes. We can capture periodic patterns in time series data using Fourier terms and periodic regressions. Fourier terms in regression models:\n\n$$y_t = \\beta_0 + \\sum_{k=1}^K \\beta_k\\cos(2\\pi kt/m) + \\gamma_k\\sin(2\\pi kt/m) + \\epsilon_t$$\nwhere $m$ = seasonal period\n\n\n**Hybrid Approach**: Combines Fourier terms (deterministic seasonality) with ARIMA (stochastic patterns):\n\n$$y_t = \\underbrace{\\sum_{k=1}^K [\\alpha_k\\sin(2\\pi kt/m) + \\beta_k\\cos(2\\pi kt/m)]}_{\\text{Fourier terms}} + \\underbrace{\\text{ARIMA}(p,d,q)(P,D,Q)_m}_{\\text{Seasonal ARIMA}} + \\epsilon_t$$\n\n\n### Datasets & Models\n\n1. **Finance Example (Intraday)**\n\n   - **Dataset:** `nyse` (Stock Volume)\n   - **Model:** \n     $$\n     y_t = \\beta_0 + \\sum_{k=1}^2\\Big[\\alpha_k\\sin\\Big(\\frac{2\\pi kt}{78}\\Big) + \\beta_k\\cos\\Big(\\frac{2\\pi kt}{78}\\Big)\\Big]\n     $$\n   - **Activity:** Optimize Fourier terms via cross-validation.\n\nWe retrieve real NYSE Composite index data (ticker `^NYA`), extract the adjusted price, and apply Fourier regression to capture seasonal patterns.\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Get NYSE Composite index data (volume) from tidyquant and convert to tsibble\nnyse <- tq_get(\"^NYA\", from = \"2018-01-01\") %>% \n  as_tsibble(index = date) %>% \n  fill_gaps() %>% \n  mutate(adjusted = imputeTS::na_ma(adjusted, k = 21))\n\n# Plot adjusted series\nnyse %>% \n  autoplot(adjusted) +\n  labs(title = \"NYSE Composite Index Volume\", y = \"Volume\", x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](activity13_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nFit seasonal models using Fourier terms (using 1 and 2 harmonics) with cross-validation for model selection.\n\n   - K=1 → $\\cos(2\\pi t/52)$, $\\sin(2\\pi t/52)$\n   - K=2 → Adds $\\cos(4\\pi t/52)$, $\\sin(4\\pi t/52)$\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Define seasonal period (business days/year ≈ 252)\nperiod <- 30  # Annual seasonality in trading days\n\n# 3. K Optimization via AICc\naic_results <- map_dfr(1:10, function(k) {\n  fit <- nyse %>%\n    model(\n      ARIMA(\n        adjusted ~ fourier(K = k, period = period) + \n        pdq(0:5, 0:2, 0:5) + PDQ(0:2, 0:1, 0:2) \n      )\n    )\n  \n  glance(fit) %>%\n    mutate(K = k)\n})\n\n\noptimal_k <- aic_results %>% \n  filter(AICc == min(AICc)) %>% \n  pull(K)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Final Hybrid Model\nfinal_model <- nyse %>% \n  model(\n    Optimal = ARIMA(\n      adjusted ~ fourier(period = period, K = optimal_k) \n    )\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5. Cross-validation with optimal K\ncv_results <- nyse %>% \n  stretch_tsibble(.init = 3*period, .step = 21) %>%  # 3-year window, monthly steps\n  model(\n    Optimal = ARIMA(\n      adjusted ~ pdq() + PDQ() + \n      fourier(period = period, K = optimal_k)\n    )\n  ) %>% \n  forecast(h = 21) %>%  # 1-month ahead\n  accuracy(nyse)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 6. Diagnostic Visualization\nfinal_model %>% \n  gg_tsresiduals() + \n  labs(title = paste(\"Residuals for K =\", optimal_k))\n```\n\n::: {.cell-output-display}\n![](activity13_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfinal_model %>% \n  forecast(h = period) %>%  # 1-year forecast\n  autoplot(nyse %>% filter(year(date) >= 2022)) +\n  labs(title = \"NYSE Adjusted Price Forecast with Optimized Fourier-SARIMA\")\n```\n\n::: {.cell-output-display}\n![](activity13_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n#### Lab Activities\n\n> **Task:** For the following COVID data, compute daily new confirmed cases, and try fitting the periodic regression with Fourier terms with different seasonal periods (e.g., 7-day vs. 14-day cycles) and compare the residual diagnostics.\n\n\n::: {.cell}\n```{webr}\nlibrary(COVID19)\ncovid_data <- covid19(verbose = FALSE)\n\ncovid <- covid_data %>% \n  filter(administrative_area_level_1 == \"United States\") %>% \n  as_tsibble(index = date) %>% \n  mutate(cases = difference(confirmed))  # Daily new cases\n\n\n# Compare 7 vs 14-day cycles\ncovid_models <- covid %>% \n  model(\n    Weekly = ARIMA(cases ~ fourier(7, K = 3) + pdq()),\n    Biweekly = ARIMA(cases ~ fourier(14, K = 5) + pdq())\n  )\n\n\n# Best model diagnostics\ncovid_models %>% \n  select(Weekly) %>% \n  gg_tsresiduals()\n```\n:::\n\n\n\n## References\n\nGuidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376,\n  doi: 10.21105/joss.02376\n\n",
    "supporting": [
      "activity13_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}