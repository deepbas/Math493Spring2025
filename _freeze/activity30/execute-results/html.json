{
  "hash": "890979f5c5a9b1a29e16e6252319ea63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity30\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss] \nengine: knitr\ntoc: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n## 1. Core Concept: Time Series Anatomy with ETS\n\n**Why ETS?** The ETS framework explicitly models three core components—level, trend, and seasonality—using a recursive structure. This differs from ARIMA, which typically uses differencing to remove trend or seasonality.\n\n1. **Level** ($l_t$): Baseline value  \n2. **Trend** ($b_t$): Persistent upward/downward movement  \n3. **Season** ($s_t$): Regular repeating pattern  \n\n### 1.1 Additive ETS Equations\n\nFor an **Additive** error, trend, and seasonality model, often denoted ETS(A,A,A):\n\n$$\n\\begin{align}\ny_t &= l_{t-1} + b_{t-1} + s_{t-m} + \\epsilon_t, \\\\\nl_t &= l_{t-1} + b_{t-1} + \\alpha \\epsilon_t, \\\\\nb_t &= b_{t-1} + \\beta \\epsilon_t, \\\\\ns_t &= s_{t-m} + \\gamma \\epsilon_t,\n\\end{align}\n$$\n\nwhere $m$ is the seasonal period (e.g., $m=12$ for monthly data, $m=4$ for quarterly), and $\\alpha, \\beta, \\gamma$ are smoothing parameters. A small $\\beta$ indicates a very slow‐changing trend, while a small $\\gamma$ indicates very stable seasonality.\n\n**Key Differences from ARIMA**  \n\n- **ETS**: Trend/seasonality are explicitly updated.  \n- **ARIMA**: Trend/seasonality are removed by differencing.  \n- **ETS**: Weighted averages via smoothing.  \n- **ARIMA**: Linear combinations of past values and errors.\n\n## 2. Extended Example: Tourism Demand in Sydney\n\nBelow is a quick demonstration of fitting an **ETS** model to tourism data in Sydney. We use R’s `fpp3` package, which provides convenient time series functions.\n\n::: {.cell}\n```{webr}\n# Filter holiday-related data in the Sydney \nsydney_hotels <- tourism %>%\n  filter(Region == \"Sydney\", Purpose == \"Holiday\")\n\n# Fit ETS with automatic component \nfit_ets <- sydney_hotels %>%\n  model(ETS(Trips))\n\n# Estimated parameters\nreport(fit_ets)\n```\n:::\n\n\n<!--\n\n$$\n\\text{Model: ETS}(M,N,A)\\ \\text{with } \\alpha = 0.1368393,\\ \\gamma = 0.0001001099,\\ \\sigma^2 = 0.0175\n$$\n\n1. **Observation Equation**  \n$$\ny_t \\;=\\; \\bigl(l_{t-1} + s_{t-m}\\bigr)\\,\\bigl(1 + \\epsilon_t\\bigr),\n$$\n\n2. **Level Update (no trend)**  \n$$\nl_t \\;=\\; l_{t-1}\\;+\\;\\alpha\\,\\frac{\\,y_t - \\bigl(l_{t-1} + s_{t-m}\\bigr)\\,}{\\,l_{t-1} + s_{t-m}\\,},\n$$\n\n3. **Seasonal Update (additive)**  \n$$\ns_t \\;=\\; s_{t-m}\\;+\\;\\gamma\\,\\frac{\\,y_t - \\bigl(l_{t-1} + s_{t-m}\\bigr)\\,}{\\,l_{t-1} + s_{t-m}\\,},\n$$\n\n4. **Initial States**  \n\\[\nl_0 = 576.999,\\quad\ns_0 = -17.45333,\\quad\ns_{-1} = -26.15747,\\quad\ns_{-2} = -19.0155,\\quad\ns_{-3} = 62.6263.\n\\]\n\n-->\n\n## 3. Activity: US GDP Forecasting\n\nHere, we illustrate how to **scale** GDP by dividing by billions and compare **ETS** vs. **ARIMA** approaches in a fair manner. We also consider more sophisticated ETS variants (e.g., damped trend).\n\n### 3.1 Data Preparation & Scaling\n\n::: {.cell}\n```{webr}\nus_economy <- global_economy %>%\n  filter(Country == \"United States\") %>%\n  mutate(GDP_billions = GDP / 1e9)  # scale by dividing by billions\n```\n:::\n\nWe now have a `GDP_billions` column that is easier to interpret than raw GDP (which can be in the trillions).\n\n### 3.2 Simple ETS vs. ARIMA\n\n**Model A: Simple Exponential Smoothing (SES)**  \n\nThis model handles level only (no trend, no seasonality). In `ETS` notation: `ETS(A,N,N)`.\n\n::: {.cell}\n```{webr}\nses_gdp <- us_economy %>%\n  model(\n    SES = ETS(GDP_billions ~ error(\"A\") + trend(\"N\") + season(\"N\"))\n  )\nses_gdp %>% report()\n```\n:::\n\n**Model B: ARIMA**  \n\nWe compare it with a simple differenced ARIMA(0,1,1). That is:\n\n$$\ny_t \\;=\\; y_{t-1} \\;+\\; \\epsilon_t \\;+\\; \\theta\\,\\epsilon_{t-1}.\n$$\n\n\n::: {.cell}\n```{webr}\narima_gdp <- us_economy %>%\n  model(fable::ARIMA(GDP_billions ~ pdq(0,1,1)))\n\narima_gdp %>% report()\n```\n:::\n\n### 3.3 More Sophisticated ETS Models\n\nTo capture trend, we might consider a **damped trend** approach, e.g. `ETS(A,Ad,N)`, where:\n\n$$\nb_t = \\phi\\,b_{t-1} + \\beta \\epsilon_t, \\quad 0 < \\phi < 1.\n$$\n\nThis damping factor $\\phi$ shrinks the trend over time, preventing runaway forecasts.\n\n::: {.cell}\n```{webr}\ndamped_ets <- us_economy %>%\n  model(\n    ETS(GDP_billions ~ error(\"A\") + trend(\"Ad\") + season(\"N\"))\n  )\n\ndamped_ets %>% report()\n```\n:::\n\n## Lab Activities\n\n### **Activity 1**: Simple Exponential Smoothing (SES)  \n\n1. Fit an `ETS(A,N,N)` model to US GDP (in billions).  \n2. Extract the smoothing parameter $\\alpha$.  \n3. Interpret what $\\alpha$ implies about how quickly the model reacts to new data.\n\n<!--\n<details>\n<summary>**Answer**</summary>\n\n::: {.cell}\n```{webr}\nses_model <- us_economy %>%\n  model(\n    SES = ETS(GDP_billions ~ error(\"A\") + trend(\"N\") + season(\"N\"))\n  )\n\nreport(ses_model)\n```\n:::\n\nIf $\\alpha=0.25$, for example, the model places 25% weight on the newest observation and 75% on the previous level estimate.\n</details>\n\n-->\n\n### **Activity 2**: ARIMA with Automatic Selection  \n\n1. Use `ARIMA(GDP_billions)` with default auto‐selection.  \n2. Compare the chosen order $(p,d,q)$ with a manually specified ARIMA(0,2,2).  \n3. Plot the forecasts to see which better captures the data trend.\n\n<!--\n\n<details>\n<summary>**Answer**</summary>\n\n::: {.cell}\n```{webr}\nauto_model <- us_economy %>%\n  model(AUTO = fable::ARIMA(GDP_billions))\nreport(auto_model)\n\n# Compare to a manual ARIMA(0,1,1):\nmanual_model <- us_economy %>%\n  model(MANUAL = fable::ARIMA(GDP_billions ~ pdq(0,1,1)))\n\n# Evaluate forecasts\nfc_auto   <- forecast(auto_model, h=10)\nfc_manual <- forecast(manual_model, h=10)\n\nfc_auto %>% autoplot(us_economy)\nfc_manual %>% autoplot(us_economy)\n```\n:::\n\n\n</details>\n\n-->\n\n---\n\n### **Activity 3**: Damped Trend ETS  \n\n1. Fit an `ETS(A,Ad,N)` model.  \n2. Inspect the damping parameter $\\phi$.  \n3. If $\\phi$ is close to 1, interpret how that affects the forecast horizon.\n\n<!--\n\n<details>\n<summary>**Answer**</summary>\n\n::: {.cell}\n```{webr}\ndamped_model <- us_economy %>%\n  model(DAMPED = ETS(GDP_billions ~ error(\"A\") + trend(\"Ad\") + season(\"N\")))\nreport(damped_model)\n```\n:::\n\nA $\\phi$ near 1 implies only mild damping, so the trend remains strong over time. A $\\phi$ near 0.8 or 0.9 indicates the trend will gradually flatten.\n</details>\n\n-->\n\n---\n\n### **Activity 4**: Forecast Accuracy Comparison  \n\n1. Generate 8‐year forecasts with each model (SES, ARIMA, Damped ETS).  \n2. Compare the accuracy metrics (RMSE, MAE, MAPE).  \n3. Conclude which model best fits US GDP data in billions.\n\n<!--\n<details>\n<summary>**Answer**</summary>\n\n::: {.cell}\n```{webr}\n# Example approach\nmodels <- us_economy %>%\n  stretch_tsibble(.init=30, .step=1) %>%\n  model(\n    SES = ETS(GDP_billions ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    ARIMA = fable::ARIMA(GDP_billions),\n    DAMPED = ETS(GDP_billions ~ error(\"A\") + trend(\"Ad\") + season(\"N\"))\n  )\n\nfc <- models %>% forecast(h=8)\naccuracy(fc, us_economy)\n```\n:::\n\n</details>\n\n-->\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}