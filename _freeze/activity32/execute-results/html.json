{
  "hash": "753148133e91544b667da6ecfdd7b8d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity32\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss] \nengine: knitr\ntoc: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n```{webr}\n# Prepare data with proper time index\ncement <- aus_production %>%\n  dplyr::select(Quarter, Cement) %>%\n  as_tsibble(index = Quarter)\n\n# Split into train/test sets\ntrain <- cement %>% filter(year(Quarter) < 2005)\ntest <- cement %>% filter(year(Quarter) >= 2005)\n```\n:::\n\n\n\n## Fitting Comparable ETS Models\n\nLet's compare some ETS specifications including:\n\n1. Simple exponential smoothing (no trend/seasonality)\n2. Holt's linear trend method\n3. Holt-Winters seasonal method\n\n\n\n::: {.cell}\n```{webr}\nets_models <- train %>%\n  model(\n    Simple = ETS(Cement ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    Holt = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HW = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    HWM = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"M\")),\n    HWMM = ETS(Cement ~ error(\"A\") + trend(\"M\") + season(\"M\"))\n  )\n```\n:::\n\n\n\n## Forecast Evaluation Framework\n\nWe'll evaluate using multiple metrics:\n\n- **MSE**: Mean Squared Error (penalizes large errors)\n- **MAE**: Mean Absolute Error (more robust)\n- **MAPE**: Mean Absolute Percentage Error (scale-independent)\n- **MASE**: Mean Absolute Scaled Error (relative to naive forecast)\n\n\n\n::: {.cell}\n```{webr}\n# Generate forecasts\nfc <- ets_models %>% forecast(h = \"5 years\")\nfc %>% tail()\n\n# Calculate accuracy metrics\naccuracy_results <- fc %>%\n  accuracy(cement) %>%\n  dplyr::select(.model, RMSE, MAE, MAPE, MASE) %>%\n  arrange(MASE)\n\naccuracy_table <- fc %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1\n  ))\n\naccuracy_results %>% inner_join(accuracy_table)\n```\n:::\n\n\n\n## Visual Verification\n\n\n\n::: {.cell}\n```{webr}\nautoplot(fc, level = NULL) +\n  autolayer(cement, color = \"black\", alpha = 0.3) +\n  labs(title = \"ETS Model Forecast Comparison\",\n       subtitle = \"Holt-Winters shows closest fit to actual data\",\n       y = \"Cement Production\")\n```\n:::\n\n\n\n\n## Model Diagnostics\n\nWe should also check residuals:\n\n\n\n::: {.cell}\n```{webr}\nets_models %>% \n  dplyr::select(HWMM) %>% \n  gg_tsresiduals() +\n  labs(title = \"Holt-Winters Residual Diagnostics\")\n```\n:::\n\n\n\n\n## Lab Activities\n\nFit an ETS(A,A,M) and ARIMA(0,1,1) model, then compare their residuals\n\n**Part A:** Fit both models and compare their accuracy using MASE and RMSE  \n**Part B:** Analyze residual diagnostics to determine which model handles autocorrelation better  \n\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n```{webr}\nactivity1 <- train %>%\n  model(\n    ETS = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"M\")),\n    ARIMA = ARIMA(Cement ~ pdq(0,1,1) + PDQ(0,0,0))\n  )\n\nactivity1 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1\n    )) \n\nactivity1 %>% dplyr::select(ETS) %>% \n  gg_tsresiduals()\n\nactivity1 %>% dplyr::select(ARIMA) %>% \n  gg_tsresiduals()\n\nactivity1 %>% dplyr::select(ETS) %>% augment() %>% \n  features(.resid, ~ljung_box(.x, lag = 20))\n```\n:::\n\n\n\n</details>\n\n**Prompt:** \"Which model shows better residual properties for supply chain forecasting? Justify using ACF plots and Ljung-Box test statistics.\"\n\n\n---\n\n### **Activity 2: Transformation Impact Analysis**\n\n**Part A:** Implement Box-Cox transformation on the Holt-Winters model using $\\lambda = 0.2$\n**Part B: (Optional)** Evaluate if transformation improves forecast interval coverage at 95% level  \n\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n```{webr}\nlambda <- 0.2 \n\nactivity2 <- train %>%\n  model(\n    Original = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    Transformed = ETS(box_cox(Cement, lambda) ~ error(\"A\") + trend(\"A\") + season(\"A\"))\n  )\n\nactivity2 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1)\n    ) \n\n\n# Prediction interval coverage\nactivity2_coverage <- activity2 %>%\n  forecast(h = 8, level = 95) %>%\n  hilo(level = 95) %>%\n  unpack_hilo(`95%`) %>%\n  as_tibble() %>%\n  left_join(test %>% rename(Cement_test = Cement), by = \"Quarter\") %>%\n  mutate(\n    # Compare test values to forecast interval\n    covered = Cement_test >= `95%_lower` & Cement_test <= `95%_upper`\n  ) %>%\n  group_by(.model) %>%\n  summarise(coverage_rate = mean(covered, na.rm = TRUE) * 100, .groups = \"drop\")\n\nactivity2_coverage\n```\n:::\n\n\n\n</details>\n\n\n**Prompt:** \"Does variance stabilization help maintain prediction interval reliability during demand spikes? \n\n\n### **Activity 3: Ensemble Forecasting Strategy**\n\n**Part A:** Create equal-weighted average of ETS and ARIMA forecasts  \n**Part B:** Verify if ensemble reduces mean error  \n\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n```{webr}\nactivity3 <- train %>%\n  model(\n    ETS = ETS(Cement),\n    ARIMA = ARIMA(Cement)\n  ) %>%\n  mutate(Ensemble = (ETS + ARIMA)/2)\n\nactivity3 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1,\n    ME = ME\n    )\n  )\n```\n:::\n\n\n\n</details>\n\n\n**Prompt:** \"When would an ensemble be particularly valuable for cement production planning? Consider both average and worst-case performance.\"",
    "supporting": [
      "activity32_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}