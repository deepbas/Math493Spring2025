{
  "hash": "a0f9269bb53ffa3d4e83014802680c7d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity32\"\nformat: \n  live-html:\n    theme:\n      light: [lux, theme-light.scss]\n      dark: [superhero, theme-dark.scss] \nengine: knitr\ntoc: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare data with proper time index\ncement <- aus_production %>%\n  select(Quarter, Cement) %>%\n  as_tsibble(index = Quarter)\n\n# Split into train/test sets\ntrain <- cement %>% filter(year(Quarter) < 2005)\ntest <- cement %>% filter(year(Quarter) >= 2005)\n```\n:::\n\n\n\n## Fitting Comparable ETS Models\n\nLet's compare some ETS specifications including:\n\n1. Simple exponential smoothing (no trend/seasonality)\n2. Holt's linear trend method\n3. Holt-Winters seasonal method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nets_models <- train %>%\n  model(\n    Simple = ETS(Cement ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    Holt = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HW = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    HWM = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"M\")),\n    HWMM = ETS(Cement ~ error(\"A\") + trend(\"M\") + season(\"M\"))\n  )\n```\n:::\n\n\n\n## Forecast Evaluation Framework\n\nWe'll evaluate using multiple metrics:\n\n- **MSE**: Mean Squared Error (penalizes large errors)\n- **MAE**: Mean Absolute Error (more robust)\n- **MAPE**: Mean Absolute Percentage Error (scale-independent)\n- **MASE**: Mean Absolute Scaled Error (relative to naive forecast)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate forecasts\nfc <- ets_models %>% forecast(h = \"5 years\")\nfc %>% tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A fable: 6 x 4 [1Q]\n# Key:     .model [1]\n  .model Quarter       Cement .mean\n  <chr>    <qtr>       <dist> <dbl>\n1 HWMM   2008 Q3 sample[5000] 2440.\n2 HWMM   2008 Q4 sample[5000] 2425.\n3 HWMM   2009 Q1 sample[5000] 2142.\n4 HWMM   2009 Q2 sample[5000] 2404.\n5 HWMM   2009 Q3 sample[5000] 2502.\n6 HWMM   2009 Q4 sample[5000] 2486.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate accuracy metrics\naccuracy_results <- fc %>%\n  accuracy(cement) %>%\n  select(.model, RMSE, MAE, MAPE, MASE) %>%\n  arrange(MASE)\n\naccuracy_table <- fc %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1\n  ))\n\naccuracy_results %>% inner_join(accuracy_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 9\n  .model  RMSE   MAE  MAPE  MASE .type    MSE  CRPS   ACF\n  <chr>  <dbl> <dbl> <dbl> <dbl> <chr>  <dbl> <dbl> <dbl>\n1 HWMM    151.  128.  5.48  1.32 Test  22663.  85.0 0.630\n2 HW      156.  130.  5.49  1.34 Test  24244.  89.6 0.407\n3 HWM     158.  132.  5.56  1.36 Test  24856.  90.7 0.517\n4 Holt    197.  171.  7.41  1.76 Test  38713. 116.  0.145\n5 Simple  236.  201.  8.44  2.07 Test  55896. 141.  0.102\n```\n\n\n:::\n:::\n\n\n\n## Visual Verification\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(fc, level = NULL) +\n  autolayer(cement, color = \"black\", alpha = 0.3) +\n  labs(title = \"ETS Model Forecast Comparison\",\n       subtitle = \"Holt-Winters shows closest fit to actual data\",\n       y = \"Cement Production\")\n```\n\n::: {.cell-output-display}\n![](activity32_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## Model Diagnostics\n\nWe should also check residuals:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nets_models %>% \n  select(HWMM) %>% \n  gg_tsresiduals() +\n  labs(title = \"Holt-Winters Residual Diagnostics\")\n```\n\n::: {.cell-output-display}\n![](activity32_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n## Lab Activities\n\n### **Activity 1: Comparing ETS and ARIMA Fundamentals**\n\nFit an ETS(A,N,M) and ARIMA(0,1,1) model, then compare their residuals\n\n**Part A:** Fit both models and compare their accuracy using MASE and RMSE  \n**Part B:** Analyze residual diagnostics to determine which model handles autocorrelation better  \n\n<!--\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivity1 <- train %>%\n  model(\n    ETS = ETS(Cement ~ error(\"A\") + trend(\"N\") + season(\"M\")),\n    ARIMA = ARIMA(Cement ~ pdq(0,1,1))\n  )\n\nactivity1 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1\n    )) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  .model .type   MAE    MSE  MAPE  CRPS    ACF\n  <chr>  <chr> <dbl>  <dbl> <dbl> <dbl>  <dbl>\n1 ARIMA  Test   97.8 16827.  4.11  72.8 -0.170\n2 ETS    Test  169.  36801.  7.19 115.  -0.178\n```\n\n\n:::\n\n```{.r .cell-code}\nactivity1 %>% select(ETS) %>% \n  gg_tsresiduals() +\n  labs(title = \"Residual Comparison: ETS vs ARIMA\")\n```\n\n::: {.cell-output-display}\n![](activity32_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n</details>\n\n-->\n\n**Prompt:** \"Which model shows better residual properties for supply chain forecasting? Justify using ACF plots and Ljung-Box test statistics.\"\n\n---\n\n### **Activity 2: Transformation Impact Analysis**\n\n**Part A:** Implement Box-Cox transformation on the Holt-Winters model using $\\lambda = 0.2$\n**Part B: (Optional)** Evaluate if transformation improves forecast interval coverage at 95% level  \n\n<!--\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda <- 0.2 \n\nactivity2 <- train %>%\n  model(\n    Original = ETS(Cement ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    Transformed = ETS(box_cox(Cement, lambda) ~ error(\"A\") + trend(\"A\") + season(\"A\"))\n  )\n\nactivity2 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1)\n    ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  .model      .type   MAE    MSE  MAPE  CRPS    ACF\n  <chr>       <chr> <dbl>  <dbl> <dbl> <dbl>  <dbl>\n1 Original    Test  107.  18374.  4.54  76.4 -0.193\n2 Transformed Test   88.3 15442.  3.69  73.3 -0.151\n```\n\n\n:::\n\n```{.r .cell-code}\n# Prediction interval coverage\nactivity2_coverage <- activity2 %>%\n  forecast(h = 8, level = 95) %>%\n  hilo(level = 95) %>%\n  unpack_hilo(`95%`) %>%\n  as_tibble() %>%\n  left_join(test %>% rename(Cement_test = Cement), by = \"Quarter\") %>%\n  mutate(\n    # Compare test values to forecast interval\n    covered = Cement_test >= `95%_lower` & Cement_test <= `95%_upper`\n  ) %>%\n  group_by(.model) %>%\n  summarise(coverage_rate = mean(covered, na.rm = TRUE) * 100, .groups = \"drop\")\n```\n:::\n\n\n\n</details>\n\n-->\n\n**Prompt:** \"Does variance stabilization help maintain prediction interval reliability during demand spikes? \n\n---\n\n### **Activity 3: Ensemble Forecasting Strategy**\n\n**Part A:** Create equal-weighted average of ETS and ARIMA forecasts  \n**Part B:** Verify if ensemble reduces mean error  \n\n<!--\n\n<details>\n<summary><b>Solution</b></summary>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivity3 <- train %>%\n  model(\n    ETS = ETS(Cement),\n    ARIMA = ARIMA(Cement)\n  ) %>%\n  mutate(Ensemble = (ETS + ARIMA)/2)\n\nactivity3 %>%\n  forecast(h = 8) %>%\n  accuracy(test, measures = list(\n    MAE = MAE,\n    MSE = MSE,\n    MAPE = MAPE,\n    CRPS = CRPS,\n    ACF = ACF1,\n    ME = ME\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 8\n  .model   .type   MAE    MSE  MAPE  CRPS    ACF    ME\n  <chr>    <chr> <dbl>  <dbl> <dbl> <dbl>  <dbl> <dbl>\n1 ARIMA    Test   216. 60536.  9.15 167.  -0.139  213.\n2 ETS      Test   127. 23575.  5.35  88.0 -0.159  127.\n3 Ensemble Test   170. 38834.  7.18 117.  -0.210  170.\n```\n\n\n:::\n:::\n\n\n\n</details>\n\n-->\n\n**Prompt:** \"When would an ensemble be particularly valuable for cement production planning? Consider both average and worst-case performance.\"\n\n",
    "supporting": [
      "activity32_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}