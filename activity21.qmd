---
title: "Activity21"
format: 
  live-html:
    theme:
      light: [lux, theme-light.scss]
      dark: [superhero, theme-dark.scss]
engine: knitr
toc: true
webr:
  packages:
    - dplyr
    - ggplot2
    - fpp3
    - patchwork
    - tsibbledata
    - urca
    - astsa
    - gridExtra
    - vars
warning: false
message: false
---

{{< include _extensions/r-wasm/live/_knitr.qmd >}}

```{r}
#| echo: false
# Time Series Essentials, install if needed!
library(feasts)       # Feature extraction & decomposition
library(fable)        # Forecasting models (ARIMA, ETS, etc.)
library(fpp3)         # Tidy time series dataseta
library(astsa)        # Applied statistical TS methods from textbook
library(tseries)      # Unit root tests & TS diagnostics
library(tsibbledata)  # Curated TS datasets
library(quantmod)     # Financial data retrieval
library(tidyquant)    # Financial analysis in tidyverse
library(purrr)        # Functional programming for TS pipelines
library(readr)        # Efficient data import
```




# Theoretical Foundations of AR Models

## **Time Series Nature & Stationarity**

Define AR($p$): $Y_t = \phi_1 Y_{t-1} + \dots + \phi_p Y_{t-p} + \epsilon_t$, $\epsilon_t \sim WN(0,\sigma^2)$  


**AR(p) Properties**:

- Captures *temporal dependence* through lagged terms
- PACF cuts off after lag $p$
- Requires stationarity for reliable inference
- Unit root non-stationarity occurs when characteristic equation $1 - \phi_1 z - \cdots - \phi_p z^p = 0$ has roots *on* unit circle

```{r}
#| echo: false
# Define the range for phi1 and phi2
phi1_vals <- seq(-2, 2, length.out = 400)
phi2_vals <- seq(-2, 2, length.out = 400)

# Create a grid of phi1 and phi2 values
grid <- expand.grid(phi1 = phi1_vals, phi2 = phi2_vals)

# Define the stationarity conditions
condition1 <- abs(grid$phi2) < 1
condition2 <- (1 - grid$phi2) > grid$phi1
condition3 <- (1 + grid$phi2) > -grid$phi1

# Determine the points that satisfy all conditions
stationary_points <- condition1 & condition2 & condition3

# Plot the stationarity region
plot(grid$phi1, grid$phi2, col = ifelse(stationary_points, "lightblue", "white"),
     pch = 20, cex = 0.5, xlab = expression(phi[1]), ylab = expression(phi[2]),
     main = "Stationarity Region for AR(2) Process")
abline(h = 0, v = 0, col = "black", lwd = 1)
```


```{r}
library(fable)
set.seed(123)
ar_data <- tibble(time = 1:100, y = arima.sim(model = list(ar = c(0.7, -0.2)), n = 100)) %>% 
  as_tsibble(index = time)

ar_data %>% 
  gg_tsdisplay(y, plot_type = c("scatter")) + # ACF/PACF
  labs(title = "AR(2) Process: φ₁=0.7, φ₂=-0.2")
```

**Model Fitting & Diagnostics**  


```{r}
fit_ar <- ar_data %>% 
  model(ARIMA(y ~ pdq(2,0,0))) # Explicit AR specification

report(fit_ar) # Check coefficients & σ²
fit_ar %>% residuals() %>% gg_tsdisplay(plot_type = c("scatter")) # Residual diagnostics
```


## **Real-World Process: US Consumption**

From the *global_economy* dataset (Ch. 5 of text), we'll analyze quarterly percentage changes in personal consumption expenditures (stationary series):


### **Lab Activity A: AR Modeling with Real Data**

```{webr}
library(fpp3)
data(us_change)
consumption_ts <- us_change %>%
  dplyr::select(Quarter, Consumption) %>%
  as_tsibble(index = Quarter)
```

**Exploratory Analysis & Stationarity**

1. **Visualize Series**:

```{webr}
consumption_ts %>%
  autoplot(Consumption) +
  labs(title = "US Consumption Changes", y = "% Change")
```

2. **Stationarity Assessment**:

```{webr}
consumption_ts %>%
  features(Consumption, unitroot_kpss) # H0: Stationary

consumption_ts %>%
  gg_tsdisplay(Consumption, plot_type = "partial")
```

**Model Fitting & Forecasting**

1. **Fit AR Model**:

```{webr}
ar_fit <- consumption_ts %>%
  model(ARIMA(Consumption ~ pdq() + PDQ(0,0,0)))

report(ar_fit) # Compare φ coefficients to simulation
```

2. **Residual Diagnostics**:

```{webr}
ar_fit %>%
  residuals() %>%
  gg_tsdisplay(.resid, plot_type = "partial") +
  labs(title = "Residual Diagnostics")
```

3. **Forecasting**:

```{webr}
ar_fit %>%
  forecast(h = 8) %>%
  autoplot(consumption_ts) +
  labs(title = "2-Year Consumption Forecast")
```


### **Lab Activity B: Real-World Application - US Income Changes**

**1. Data Preparation & Visualization**

```{webr}
income_ts <- us_change %>%
  dplyr::select(Quarter, Income) %>%
  as_tsibble(index = Quarter)

income_ts %>%
  autoplot(Income) +
  labs(title = "US Personal Income Growth Rate", y = "% Change")
```

**2. Order Identification**  

Determine appropriate AR order through PACF:

```{webr}
income_ts %>%
  gg_tsdisplay(Income, plot_type = "partial", lag_max = 25) +
  labs(title = "Income Series Diagnostics")
```


**3. Model Comparison**  

Fit competing specifications and evaluate:

```{webr}
income_models <- income_ts %>%
  model(
    AR1 = ARIMA(Income ~ pdq(1,0,0)),
    AR2 = ARIMA(Income ~ pdq(2,0,0)),
    Auto = ARIMA(Income)
  )

glance(income_models) 
tidy(income_models)
```


**4. Forecasting & Policy Implications**  

Using the best model, generate forecasts up-to 10 time points into the future and interpret economic meaning:

```{webr}
income_models %>%
  dplyr::select(Auto) %>%
  forecast(h = 8) %>%
  autoplot(income_ts) +
  labs(title = "2-Year Income Growth Forecast",
       subtitle = "Auto Model Projection")
```

