---
title: "Activity19"
format: 
  live-html:
    theme:
      light: minty
      dark: darkly  
engine: knitr
toc: true
webr:
  packages:
    - dplyr
    - ggplot2
    - fpp3
    - patchwork
    - tsibbledata
    - urca
    - astsa
    - gridExtra
    - vars
warning: false
message: false
---

{{< include _extensions/r-wasm/live/_knitr.qmd >}}

```{r}
#| echo: false
# Time Series Essentials, install if needed!
library(feasts)       # Feature extraction & decomposition
library(fable)        # Forecasting models (ARIMA, ETS, etc.)
library(fpp3)         # Tidy time series dataseta
library(astsa)        # Applied statistical TS methods from textbook
library(tseries)      # Unit root tests & TS diagnostics
library(tsibbledata)  # Curated TS datasets
library(quantmod)     # Financial data retrieval
library(tidyquant)    # Financial analysis in tidyverse
library(purrr)        # Functional programming for TS pipelines
library(readr)        # Efficient data import
```



**Mastering ACF & PACF Diagnostics**  

*Objective: Identify AR(p)/MA(q) signatures through autocorrelation patterns*

The ACF reveals how auto correlations persist over lags, indicating the need for differencing (if autocorrelations decay slowly) or the presence of seasonality (periodic spikes). The PACF pinpoints the order of AR terms by showing where partial correlations become negligible. Together, ACF and PACF help diagnose appropriate ARIMA or seasonal ARIMA structures.

### 1.1 ACF Decay Patterns with `gtemp_both`

```{r}
# Trend-dominated series
gtemp_both |> 
  as_tsibble() |>
  ACF(lag_max = 50) |> 
  autoplot() + 
  labs(subtitle = "Slow ACF decay indicates non-stationarity")

# After differencing
gtemp_both |> 
  as_tsibble() |>
  mutate(dTemp = difference(value)) |> 
  ACF(dTemp) |> 
  autoplot() +
  labs(subtitle = "ACF cuts off after lag 1 -> MA(1) signature")
```

**Key Concept**: Persistent ACF decay suggests differencing needed. Sharp cutoff at lag 1 after differencing implies MA(1) component.



### 1.2 PACF for AR Order Identification with `pelt`

```{r}
# Lynx population analysis
pelt |> 
  as_tsibble() |>
  PACF(Lynx, lag_max = 5) |> 
  autoplot() +
  labs(title = "PACF cuts off at lag 2 -> AR(2) process")
```

**Equation**: AR(p): $X_t = \phi_1X_{t-1} + ... + \phi_pX_{t-p} + \epsilon_t$ 

PACF spikes within first p lags indicate AR order.

### 1.3 Seasonal ACF in `vic_elec`

```{r}
vic_elec |> 
  filter(year(Time)==2013) |> 
  ACF(Demand, lag_max=200) |> 
  autoplot() +
  labs(subtitle = "Spikes at 48 lags = daily seasonality")
```

**Interpretation**: ACF peaks at multiples of fundamental period (48 half-hours = 1 day) reveal seasonality.

### Lab Activity:

1. Load the `aus_production` dataset from `fpp3`.


```{webr}
# 1) Load and visualize the 'Gas' time series
aus_production %>%
  dplyr::select(Quarter, Gas) %>%
  autoplot(Gas) +
  labs(title="Gas Time Series from aus_production")
```


2. Choose the 'Gas' time series. Plot its ACF and PACF to identify any AR/MA components or seasonal effects.


```{webr}
# 2) Plot ACF & PACF to assess AR/MA/seasonal components
aus_production %>%
  ACF(Gas) %>%
  autoplot() +
  labs(title="ACF of Gas")

aus_production %>%
  PACF(Gas) %>%
  autoplot() +
  labs(title="PACF of Gas")
```

3. Apply differencing if needed, and re-check the ACF/PACF to refine your model choice.

```{webr}
# 3) Apply differencing if needed, then re-check ACF/PACF
aus_production %>%
  mutate(dGas = difference(Gas)) %>%
  ACF(dGas) %>%
  autoplot() +
  labs(title="ACF of Differenced Gas")

aus_production %>%
  mutate(dGas = difference(Gas)) %>%
  PACF(dGas) %>%
  autoplot() +
  labs(title="PACF of Differenced Gas")
```



