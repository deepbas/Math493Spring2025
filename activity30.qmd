---
title: "Activity30"
format: 
  live-html:
    theme:
      light: [lux, theme-light.scss]
      dark: [superhero, theme-dark.scss] 
engine: knitr
toc: true
---

{{< include _extensions/r-wasm/live/_knitr.qmd >}}


```{r}
#| echo: false
# Time Series Essentials, install if needed!
library(feasts)       # Feature extraction & decomposition
library(fable)        # Forecasting models (ARIMA, ETS, etc.)
library(fpp3)         # Tidy time series dataseta
library(astsa)        # Applied statistical TS methods from textbook
library(tseries)      # Unit root tests & TS diagnostics
library(tsibbledata)  # Curated TS datasets
library(quantmod)     # Financial data retrieval
library(tidyquant)    # Financial analysis in tidyverse
library(purrr)        # Functional programming for TS pipelines
library(readr)        # Efficient data import
```

## 1. Core Concept: Time Series Anatomy with ETS

**Why ETS?** The ETS framework explicitly models three core components—level, trend, and seasonality—using a recursive structure. This differs from ARIMA, which typically uses differencing to remove trend or seasonality.

1. **Level** ($l_t$): Baseline value  
2. **Trend** ($b_t$): Persistent upward/downward movement  
3. **Season** ($s_t$): Regular repeating pattern  

### 1.1 Additive ETS Equations

For an **Additive** error, trend, and seasonality model, often denoted ETS(A,A,A):

$$
\begin{align}
y_t &= l_{t-1} + b_{t-1} + s_{t-m} + \epsilon_t, \\
l_t &= l_{t-1} + b_{t-1} + \alpha \epsilon_t, \\
b_t &= b_{t-1} + \beta \epsilon_t, \\
s_t &= s_{t-m} + \gamma \epsilon_t,
\end{align}
$$

where $m$ is the seasonal period (e.g., $m=12$ for monthly data, $m=4$ for quarterly), and $\alpha, \beta, \gamma$ are smoothing parameters. A small $\beta$ indicates a very slow‐changing trend, while a small $\gamma$ indicates very stable seasonality.

**Key Differences from ARIMA**  

- **ETS**: Trend/seasonality are explicitly updated.  
- **ARIMA**: Trend/seasonality are removed by differencing.  
- **ETS**: Weighted averages via smoothing.  
- **ARIMA**: Linear combinations of past values and errors.

## 2. Extended Example: Tourism Demand in Sydney

Below is a quick demonstration of fitting an **ETS** model to tourism data in Sydney. 

```{webr}
# Filter holiday-related data in the Sydney 
sydney_hotels <- tourism %>%
  filter(Region == "Sydney", Purpose == "Holiday")

# Fit ETS with automatic component 
fit_ets <- sydney_hotels %>%
  model(ETS(Trips))

# Estimated parameters
report(fit_ets)
```


<!--

$$
\text{Model: ETS}(M,N,A)\ \text{with } \alpha = 0.1368393,\ \gamma = 0.0001001099,\ \sigma^2 = 0.0175
$$

1. **Observation Equation**  
$$
y_t \;=\; \bigl(l_{t-1} + s_{t-m}\bigr)\,\bigl(1 + \epsilon_t\bigr),
$$

2. **Level Update (no trend)**  
$$
l_t \;=\; l_{t-1}\;+\;\alpha\,\frac{\,y_t - \bigl(l_{t-1} + s_{t-m}\bigr)\,}{\,l_{t-1} + s_{t-m}\,},
$$

3. **Seasonal Update (additive)**  
$$
s_t \;=\; s_{t-m}\;+\;\gamma\,\frac{\,y_t - \bigl(l_{t-1} + s_{t-m}\bigr)\,}{\,l_{t-1} + s_{t-m}\,},
$$

4. **Initial States**  
$$
l_0 = 576.999,\quad
s_0 = -17.45333,\quad
s_{-1} = -26.15747,\quad
s_{-2} = -19.0155,\quad
s_{-3} = 62.6263.
$$

-->

## 3. Activity: US GDP Forecasting

Here, we illustrate how to **scale** GDP by dividing by billions and compare **ETS** vs. **ARIMA** approaches in a fair manner. We also consider more sophisticated ETS variants (e.g., damped trend).

### 3.1 Data Preparation & Scaling

```{webr}
us_economy <- global_economy %>%
  filter(Country == "United States") %>%
  mutate(GDP_billions = GDP / 1e9)  # scale by dividing by billions
```

We now have a `GDP_billions` column that is easier to interpret than raw GDP (which can be in the trillions).

### 3.2 Simple ETS vs. ARIMA

**Model A: Simple Exponential Smoothing (SES)**  

This model handles level only (no trend, no seasonality). In `ETS` notation: `ETS(A,N,N)`.

```{webr}
ses_gdp <- us_economy %>%
  model(
    SES = ETS(GDP_billions ~ error("A") + trend("N") + season("N"))
  )
ses_gdp %>% report()
```

**Model B: ARIMA**  

We compare it with a simple differenced ARIMA(0,1,1). That is:

$$
y_t \;=\; y_{t-1} \;+\; \epsilon_t \;+\; \theta\,\epsilon_{t-1}.
$$


```{webr}
arima_gdp <- us_economy %>%
  model(fable::ARIMA(GDP_billions ~ pdq(0,1,1)))

arima_gdp %>% report()
```

### 3.3 More Sophisticated ETS Models

To capture trend, we might consider a **damped trend** approach, e.g. `ETS(A,Ad,N)`, where:

$$
b_t = \phi\,b_{t-1} + \beta \epsilon_t, \quad 0 < \phi < 1.
$$

This damping factor $\phi$ shrinks the trend over time, preventing runaway forecasts.

```{webr}
damped_ets <- us_economy %>%
  model(
    ETS(GDP_billions ~ error("A") + trend("Ad") + season("N"))
  )

damped_ets %>% report()
```

## Lab Activities

### **Activity 1**: Simple Exponential Smoothing (SES)  

1. Fit an `ETS(A,N,N)` model to US GDP (in billions).  
2. Extract the smoothing parameter $\alpha$.  
3. Interpret what $\alpha$ implies about how quickly the model reacts to new data.


<details>
<summary>**Answer**</summary>

```{webr}
ses_model <- us_economy %>%
  model(
    SES = ETS(GDP_billions ~ error("A") + trend("N") + season("N"))
  )

report(ses_model)
```

If $\alpha=0.25$, for example, the model places 25% weight on the newest observation and 75% on the previous level estimate.
</details>



### **Activity 2**: ARIMA with Automatic Selection  

1. Use `ARIMA(GDP_billions)` with default auto‐selection.  
2. Compare the chosen order $(p,d,q)$ with a manually specified ARIMA(0,2,2).  
3. Plot the forecasts to see which better captures the data trend.



<details>
<summary>**Answer**</summary>

```{webr}
auto_model <- us_economy %>%
  model(AUTO = fable::ARIMA(GDP_billions))
report(auto_model)

# Compare to a manual ARIMA(0,1,1):
manual_model <- us_economy %>%
  model(MANUAL = fable::ARIMA(GDP_billions ~ pdq(0,1,1)))

# Evaluate forecasts
fc_auto   <- forecast(auto_model, h=10)
fc_manual <- forecast(manual_model, h=10)

fc_auto %>% autoplot(us_economy)
fc_manual %>% autoplot(us_economy)
```


</details>



---

### **Activity 3**: Damped Trend ETS  

1. Fit an `ETS(A,Ad,N)` model.  
2. Inspect the damping parameter $\phi$.  
3. If $\phi$ is close to 1, interpret how that affects the forecast horizon.



<details>
<summary>**Answer**</summary>

```{webr}
damped_model <- us_economy %>%
  model(DAMPED = ETS(GDP_billions ~ error("A") + trend("Ad") + season("N")))
report(damped_model)
```

A $\phi$ near 1 implies only mild damping, so the trend remains strong over time. A $\phi$ near 0.8 or 0.9 indicates the trend will gradually flatten.
</details>



---

### **Activity 4**: Forecast Accuracy Comparison  

1. Generate 8‐year forecasts with each model (SES, ARIMA, Damped ETS).  
2. Compare the accuracy metrics (RMSE, MAE, MAPE).  
3. Conclude which model best fits US GDP data in billions.


<details>
<summary>**Answer**</summary>

```{webr}
# Example approach
models <- us_economy %>%
  stretch_tsibble(.init=30, .step=1) %>%
  model(
    SES = ETS(GDP_billions ~ error("A") + trend("N") + season("N")),
    ARIMA = fable::ARIMA(GDP_billions),
    DAMPED = ETS(GDP_billions ~ error("A") + trend("Ad") + season("N"))
  )

fc <- models %>% forecast(h=8)
accuracy(fc, us_economy)
```

</details>




